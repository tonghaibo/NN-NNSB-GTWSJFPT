<?xml version='1.0' encoding='GBK'?><mdroot><grdds>
<ROWSET>
<ROW num="0" ><MWTYP >R</MWTYP><MWID >YSZL_DYQD</MWID><NAME >银社直连业务交易清单打印</NAME><NOTE ></NOTE><NOACCNAME ></NOACCNAME><FILE >YSZL_DYQD.zxg</FILE><SCENE ></SCENE><FIXED ></FIXED><CATTYP ></CATTYP><DTLRNG ></DTLRNG><BATINP ></BATINP><MANUNIT ></MANUNIT><USESMLUNT ></USESMLUNT><ITEMTABLE ></ITEMTABLE><BILHDRTABLE ></BILHDRTABLE><BILDTLTABLE ></BILDTLTABLE><COLLIST ></COLLIST><WHERE ></WHERE><ORDER ></ORDER><DBNAME ></DBNAME><LISTSUM ></LISTSUM><LOADDATA ></LOADDATA><CHECKTITLE ></CHECKTITLE><IFBILL ></IFBILL><EXTJS ></EXTJS><JAVACLS ></JAVACLS><POST2MWID ></POST2MWID><LMS ></LMS><WIDTHMOD >9</WIDTHMOD><HEIGHTMOD ></HEIGHTMOD><CLIENTCLASS ></CLIENTCLASS><SHOWBTN >1</SHOWBTN><CLOSEPAGES ></CLOSEPAGES><syt >SBCW</syt></ROW>
</ROWSET>
</grdds><grdjsds>
<ROWSET>
<ROW num="0" ><GRDJSDS_VALUE >//20170213 lwq  development model=&amp;gt;20170217 finish
var sign = &amp;quot;&amp;quot;;
var ZXGFILE = &amp;quot;&amp;quot;;
var _scny = &amp;quot;&amp;quot;; //生成年月
var title = &amp;quot;&amp;quot;; //标题
var yhzlnew = &amp;quot;&amp;quot;; //修改后的银行种类
var curr_pageno = 1; //当前页
var curr_maxpageno = 0; //最大分页数

//数据加载完毕
function _thisOnpost_loaddata(sheet)
{
	//接收传入参数--20170309 lwq delete-无参数传入
//	try {
//		objParam = window.dialogArguments;
//		if (objParam.sign != null &amp;&amp; objParam.sign != undefined) {
//			sign = objParam.sign;
//		}
//	} catch (e) {}
	
	//20170224 lwq add
	_this.AddToolbarButton(&amp;quot;udf_printQD&amp;quot;,&amp;quot;打印清单&amp;quot;,&amp;quot;打印清单&amp;quot;,&amp;quot;&amp;quot;,1,1,1,60);	
	
//	if (sign == 1){
//		_this.SetCellText(0,1,1,&amp;quot;银社直连业务交易成功明细清单&amp;quot;);
//		_this.SetCellText(1,1,11,35);
//	}else if (sign == 2){
//		_this.SetCellText(0,1,1,&amp;quot;银社直连业务交易失败明细清单&amp;quot;);
//		_this.SetCellText(1,1,11,20);
//	}
	
	_this.SetToSelectBox(&amp;quot;CELL_0_1_2&amp;quot;,1,1,2,&amp;quot;V_CW_YYYY_MM&amp;quot;,&amp;quot;&amp;quot;);
	try { _scny = SCNY; } catch(e) {}
	if (_scny == &amp;quot;&amp;quot;) {
		_this.SetCellText(1,1,2,G_LOGDAT.substring(0,7));
	}
	else {
		_this.SetCellText(1,1,2,_scny);
	}
	
	//成功标志--20170309 lwq add
	var cgbzList = _this.CreateListValue();
	_this.SetListValue(cgbzList,&amp;quot;1&amp;quot;,&amp;quot;成功&amp;quot;);
	_this.SetListValue(cgbzList,&amp;quot;2&amp;quot;,&amp;quot;失败&amp;quot;);
	_this.SetToComboBox(&amp;quot;&amp;quot;,1,1,8,cgbzList);
	_this.SetCellText(1,1,8,&amp;quot;&amp;quot;);
	
	//银行种类
	var yhList = _this.CreateListValueByXMLDS(_this.HttpCall(homeurl+&amp;quot;/XmlDB.sp?bind=V_CW_YHZL_ZJ&amp;where=id in (select yhbm from cw_dfdsb_yszl where yszl_yhjgdm is not null) and ID &amp;lt;&amp;gt; &amp;apos;%25&amp;apos;&amp;quot;),&amp;quot;ID&amp;quot;,&amp;quot;NAME&amp;quot;);
	_this.SetToComboBox(&amp;quot;&amp;quot;,1,1,4,yhList);
	_this.SetCellText(1,1,4,&amp;quot;&amp;quot;);	
	
	_this.SetCellText(0,2,5,G_LOGDAT.substring(0,10)); //日期
	_this.SetColVisible(0,_this.GetColCount(0)-2,-1);//隐藏行号列
	
	_this.SetCellText(1,1,13,35); //每页行数
	
	_this.SplitSheet(1,&amp;quot;V&amp;quot;,&amp;quot;10%&amp;quot;);
	_this.LoadScene(sheet,10);	
	
	ZXGFILE = _this.SaveTempZXGFile(0);
}

//点击按钮
function _thisOnButtonCtrlClick(id,sheet,row,col)
{
	if(id == &amp;quot;查询&amp;quot;){
		LoadQD(1);
	}
}

//鼠标左键点击
function _thisOnMouseLClick(sheet,row,col)
{
	if (sheet == 1) {
		if (row == 1 &amp;&amp; col == 15) { //首页
			LoadQD(1);
		}
		else if (row == 1 &amp;&amp; col == 16) { //上一页
			var pageno = curr_pageno - 1;
			if (pageno &amp;lt;= 0) return;
			LoadQD(pageno);
		}
		else if (row == 1 &amp;&amp; col == 17) { //下一页
			var pageno = curr_pageno + 1;
			if (pageno &amp;gt; curr_maxpageno) return;		
			LoadQD(pageno);
		}
		else if (row == 1 &amp;&amp; col == 18) { //尾页
			LoadQD(curr_maxpageno);
		}
		
	}
}

//修改单元格内容
function _thisOnCellModify(sheet,row,col,oldvalue,newvalue)
{
	if (sheet == 1) {
		if (row == 1 &amp;&amp; col == 2) {
			var ym1 = _this.GetCellText(sheet,1,2);
			if (ym1.indexOf(&amp;quot;-&amp;quot;) == -1) {
				var ym11 = ym1.substring(0,4)+&amp;quot;-&amp;quot;+ym1.substring(4,6);
				_this.SetCellText(sheet,1,2,ym11);
			}
			ym1 = ym1.replace(&amp;quot;-&amp;quot;,&amp;quot;&amp;quot;);
			if (ym1.length &amp;lt; 6) {
				alert(&amp;quot;输入的期限不正确，请检查！格式：YYYYMM/YYYY-MM 201501/2015-01&amp;quot;);
				_this.SetCellText(sheet,row,col,oldvalue);
			}
		}
		if(row==1 &amp;&amp; col == 4){
			yhzlnew = _this.GetShowText(&amp;quot;CELL_1_1_4&amp;quot;);
		}
		if(row == 1 &amp;&amp; col == 13){
			_this.SetCellText(1,1,13,newvalue);
		}	
	}
	if(sheet == 1 &amp;&amp; row == 1 &amp;&amp; col == 8){
		if(newvalue == 1){
			_this.SetCellText(0,1,1,&amp;quot;银社直连业务交易成功明细清单&amp;quot;);
			_this.SetCellText(1,1,13,35);
		}else if(newvalue == 2){
			_this.SetCellText(0,1,1,&amp;quot;银社直连业务交易失败明细清单&amp;quot;);
			_this.SetCellText(1,1,13,20);	
		}
		title =  _this.GetCellText(0,1,1);
		_this.SetCellText(1,1,8,newvalue);
	}
}

//加载清单明细
function LoadQD(pageno){
	curr_pageno = pageno;

	var sbh = G_ORGID;
	var zth = G_ACCID.replace(G_ORGID,&amp;quot;&amp;quot;);
	
	var cgsign = _this.GetCellText(1,1,8); //清单成败标志
	
	var pagerows = _this.GetCellText(1,1,13); //分页每页总行数
	var yymm = (_this.GetCellText(1,1,2)).replace(&amp;quot;-&amp;quot;,&amp;quot;&amp;quot;);
	
	var yhzl = _this.GetCellText(1,1,4);
	var pch = _this.GetCellText(1,1,6);
	
	if(pch == &amp;quot;&amp;quot;){
		alert(&amp;quot;批次号不能留空！&amp;quot;);
	}else{		
		_this.SetToolbarString(&amp;quot;正在加载数据...&amp;quot;);
		//清除前面的数据
		_this.LoadZXGFile(ZXGFILE,-1,0);//清空主数据区
		_this.SetFixedRow(0,5);
		_this.SetMainCellRange(0,5,1,_this.GetRowCount(0)-4,_this.GetColCount(0)-2);//设置主数据区
		
		_this.SetCellText(0,1,1,yhzlnew+title); //标题
		_this.SetCellText(0,3,5,pch); //批次号
		_this.SetCellText(0,9,2,G_USRNAM); //经办人
		
		_this.SetColVisible(0,_this.GetColCount(0)-2,-1);//隐藏行号列
		_this.SetRowVisible(0,_this.GetRowCount(0)-2,-1);//隐藏总合计行
		
		//成功标志：1-成功，2-失败
		var cgbz = &amp;quot;&amp;quot;; 
		if(cgsign == &amp;quot;1&amp;quot;){
			cgbz = &amp;quot; AND b.BAZ901 = &amp;apos;0000&amp;apos; &amp;quot;;
		}else if(cgsign == &amp;quot;2&amp;quot;){
			cgbz = &amp;quot; and b.BAZ901 != &amp;apos;0000&amp;apos; &amp;quot;;
		}
		
//		var xml = _sql.query(&amp;quot;LoadQD&amp;quot;,&amp;quot;SBH=&amp;quot;+sbh+&amp;quot;&amp;ZTH=&amp;quot;+zth+&amp;quot;&amp;YYMM=&amp;quot;+yymm+&amp;quot;&amp;YHZL=&amp;quot;+yhzl+&amp;quot;&amp;PCH=&amp;quot;+pch+&amp;quot;&amp;CGBZ=&amp;quot;+cgbz);
//		_this.SetXmlDS(0,5,1,_this.GetRowCount(0)-3,_this.GetColCount(0)-2,xml);

		//20170222 lwq add-分页			
		var param = &amp;quot;SBH=&amp;quot;+sbh+&amp;quot;&amp;ZTH=&amp;quot;+zth+&amp;quot;&amp;YYMM=&amp;quot;+yymm+&amp;quot;&amp;YHZL=&amp;quot;+yhzl+&amp;quot;&amp;PCH=&amp;quot;+pch+&amp;quot;&amp;CGBZ=&amp;quot;+cgbz;
		param += &amp;quot;&amp;thissytid=&amp;quot;+G_SYTID+&amp;quot;&amp;thisgrdid=&amp;quot;+G_GRDID+&amp;quot;&amp;dsid=LoadQD&amp;pageno=&amp;quot;+pageno+&amp;quot;&amp;pagerows=&amp;quot;+pagerows;
		var xml = invokeOSFunc(&amp;quot;queryXml&amp;quot;,param);
		_this.SetXmlDS(0,5,1,_this.GetRowCount(0)-4,_this.GetColCount(0)-2,xml);
		//获取总记录数
		var totalcnt = invokeOSFunc(&amp;quot;queryRowCount&amp;quot;,param); 	
		//计算最大分页数
		curr_maxpageno = Math.ceil(totalcnt / pagerows);
		var rowsinfo = &amp;quot; 共 &amp;quot;+totalcnt+&amp;quot; 行  第 &amp;quot; + pageno + &amp;quot;/&amp;quot; + curr_maxpageno + &amp;quot;页 每页 &amp;quot; + pagerows + &amp;quot; 行&amp;quot;;
		_this.SetCellText(0,_this.GetRowCount(0)-1,9,rowsinfo);
		
		_sql.querytods(&amp;quot;LoadZH&amp;quot;,&amp;quot;SBH=&amp;quot;+sbh+&amp;quot;&amp;ZTH=&amp;quot;+zth+&amp;quot;&amp;YYMM=&amp;quot;+yymm+&amp;quot;&amp;YHZL=&amp;quot;+yhzl+&amp;quot;&amp;PCH=&amp;quot;+pch+&amp;quot;&amp;CGBZ=&amp;quot;+cgbz);
		if(_this.XMLDS_GetRowCount()&amp;gt;0){
			var sbkh = _this.XMLDS_GetString(0,&amp;quot;BAE309&amp;quot;);
			var sbzh = _this.XMLDS_GetString(0,&amp;quot;BAE310&amp;quot;);
			var kpmc = _this.XMLDS_GetString(0,&amp;quot;BAC001&amp;quot;);

			_this.SetCellText(0,2,2,sbkh); //户名
			_this.SetCellText(0,3,2,sbzh); //账户
			_this.SetCellText(0,3,8,kpmc); //拷盘名称
		}
		
		//合并相同单元格
		var olddj = &amp;quot;&amp;quot;;	  //单据旧值
		var oldkx = &amp;quot;&amp;quot;;	  //款项类别旧值
		var startrowdj = 5; //相同单据行的开始行
		var startrowkx = 5; //相同款项类别行的开始行
		for (var r1=5;r1&amp;lt;=_this.GetMainCellRangeRow2(0);r1++) {  //20170222 lwq modify
			var nowdj = _this.GetCellText(0,r1,2); //当前行的单据号值
			var nowkx = _this.GetCellText(0,r1,6); //当前行的款项类别 
			if(r1 == startrowdj ){  //如果当前行等于相同行的开始行，将当前行的单据值赋值给olddj，将当前行的款项类别值赋值给oldkx
				olddj = nowdj;
				oldkx = nowkx;
			}
			//如果当前行的款项类别值不等于oldkx，进行相同值的单元格合并；并将当前行的款项类别新值赋值给oldkx，将当前行号值赋值给startrowkx
			if(oldkx != nowkx &amp;&amp; oldkx != &amp;quot;&amp;quot; &amp;&amp; nowkx != &amp;quot;&amp;quot;){
				_this.MergeCells(0,startrowkx,6,r1-1,6);
				oldkx = nowkx;
				startrowkx = r1;
			}
//			else if (oldkx == nowkx &amp;&amp; r1==_this.GetMainCellRangeRow2(0) &amp;&amp; oldkx != &amp;quot;&amp;quot; &amp;&amp; nowkx != &amp;quot;&amp;quot;){ //20170223 lwq modify
			else if (olddj == nowdj &amp;&amp; oldkx == nowkx &amp;&amp; oldkx != &amp;quot;&amp;quot; &amp;&amp; nowkx != &amp;quot;&amp;quot;){ //20170307 lwq modify
				_this.MergeCells(0,startrowkx,6,r1,6);
			}
			//如果当前行的单据号值不等于olddj，进行相同值的单元格合并；并将当前行的单据号新值赋值给olddj，将当前行号值赋值给startrowdj，退出本次循环，进行下一次循环
			if(olddj != nowdj &amp;&amp; olddj != &amp;quot;&amp;quot; &amp;&amp; nowdj != null){ 
				_this.MergeCells(0,startrowdj,2,r1-1,2);
				_this.MergeCells(0,startrowdj,1,r1-1,1);
				_this.MergeCells(0,startrowdj,3,r1-1,3);
				_this.MergeCells(0,startrowdj,4,r1-1,4);
				_this.MergeCells(0,startrowdj,5,r1-1,5);
				olddj = nowdj;
				startrowdj = r1;
				oldkx = nowkx;
				startrowkx = r1;
				continue;
			}
			else if(olddj == nowdj &amp;&amp; r1==_this.GetMainCellRangeRow2(0) &amp;&amp; olddj != &amp;quot;&amp;quot; &amp;&amp; nowdj != null){ //20170223 lwq modify
				_this.MergeCells(0,startrowdj,2,r1,2);
				_this.MergeCells(0,startrowdj,1,r1,1);
				_this.MergeCells(0,startrowdj,3,r1,3);
				_this.MergeCells(0,startrowdj,4,r1,4);
				_this.MergeCells(0,startrowdj,5,r1,5);
			}	
		}
		//20170223 lwq modify			
		var ycount = _this.GetCellText(0,_this.GetRowCount(0)-4,1);
		var xcount = _this.GetCellText(0,5,1); 
		var yxcount = 0;
		if(ycount != xcount &amp;&amp; ycount != &amp;quot;&amp;quot; &amp;&amp; xcount != &amp;quot;&amp;quot;){
			yxcount = ycount - xcount + 1;
		}else if((ycount == xcount &amp;&amp; ycount != &amp;quot;&amp;quot; &amp;&amp; xcount != &amp;quot;&amp;quot;) || (ycount != xcount &amp;&amp; ycount == &amp;quot;&amp;quot; &amp;&amp; xcount != &amp;quot;&amp;quot;)){
			yxcount = 1;
		}
		var hjstr = &amp;quot;笔数：&amp;quot;+yxcount;
		_this.SetCellText(0,_this.GetRowCount(0)-3,4,hjstr);
		
		if(pageno == curr_maxpageno &amp;&amp; pageno != 0){
			_this.SetRowVisible(0,_this.GetRowCount(0)-2,1);//显示总合计行
			var zhjstr = &amp;quot;&amp;quot;;
			if(ycount == &amp;quot;&amp;quot;){
				zhjstr = &amp;quot;笔数：&amp;quot;+xcount;
			}else{
				zhjstr = &amp;quot;笔数：&amp;quot;+ycount;
			}
			_this.SetCellText(0,_this.GetRowCount(0)-2,4,zhjstr);
			
			_sql.querytods(&amp;quot;LoadZHJ&amp;quot;,&amp;quot;SBH=&amp;quot;+sbh+&amp;quot;&amp;ZTH=&amp;quot;+zth+&amp;quot;&amp;YYMM=&amp;quot;+yymm+&amp;quot;&amp;YHZL=&amp;quot;+yhzl+&amp;quot;&amp;PCH=&amp;quot;+pch+&amp;quot;&amp;CGBZ=&amp;quot;+cgbz);
			if(_this.XMLDS_GetRowCount()&amp;gt;0){
				var zjestr = _this.XMLDS_GetString(0,&amp;quot;ZJE&amp;quot;);
				_this.SetCellText(0,_this.GetRowCount(0)-2,8,zjestr); //总计
			}
		}

		_this.SetToolbarString(&amp;quot;&amp;quot;);
		_this.RefreshFormula();
		
//		_this.AutoFixColWidth(0,600); //自适应列宽
//		_this.AutoFixRowHeight(0);    //自适应行高
		_this.AutoFixColWidthInCellRange(0,5,1,_this.GetRowCount(0)-4,_this.GetColCount(0)-2,-1); //上下宽度自适应
				
		_this.SetCellFocus(0,1,1);  //焦点定位,为了点击打印时打印的是SHEET_0页面内容
	}
}

//打印--20170224 lwq add
function printQD()
{
	if (curr_maxpageno == 0) {
		alert(&amp;quot;没有数据，请先查询！&amp;quot;);
		return;
	}
	
	for (var i=1;i&amp;lt;=curr_maxpageno;i++) {
		LoadQD(i);
		_this.Print(0,0);
	}
}</GRDJSDS_VALUE></ROW>
</ROWSET>
</grdjsds><grdosds>
<ROWSET>
<ROW num="0" ><GRDOSDS_VALUE >var pub = new JavaPackage(&amp;quot;com.xlsgrid.net.pub&amp;quot;);
var servletpack = new JavaPackage(&amp;quot;com.xlsgrid.net.servlet&amp;quot;);

//分页查询
function queryXml()
{
	var db = null;
	try {
		db = new pub.EADatabase();
		var mwsql = new servletpack.MWSQL();
		var sql = mwsql.GetQuerySQL(request,db,thissytid ,thisgrdid ,dsid);
		sql = pub.EAFunc.Replace(sql,&amp;quot;[%SBH]&amp;quot;,SBH);
		sql = pub.EAFunc.Replace(sql,&amp;quot;[%ZTH]&amp;quot;,ZTH);
		sql = pub.EAFunc.Replace(sql,&amp;quot;[%YYMM]&amp;quot;,YYMM);
		sql = pub.EAFunc.Replace(sql,&amp;quot;[%YHZL]&amp;quot;,YHZL);
		sql = pub.EAFunc.Replace(sql,&amp;quot;[%PCH]&amp;quot;,PCH);
		sql = pub.EAFunc.Replace(sql,&amp;quot;[%CGBZ]&amp;quot;,CGBZ);

		sql = &amp;quot;select * from ( &amp;quot; + sql + &amp;quot; ) where rn&amp;gt;(&amp;quot;+pageno+&amp;quot;-1)*&amp;quot;+pagerows+&amp;quot; and rn&amp;lt;=&amp;quot;+pageno+&amp;quot;*&amp;quot;+pagerows;
		//throw new Exception(sql);

		var ds = db.QuerySQL(sql);
		return ds.GetXml();
		
	}
	catch(e) {
		if (db != null) db.Rollback();
		return e.toString();
	}
	finally {
		if (db != null) db.Close();
	}
}


//分页取总行数~总金额
function queryRowCount()
{	
	var db = null;
	try {
		db = new pub.EADatabase();
		var mwsql = new servletpack.MWSQL();
		var sql = mwsql.GetQuerySQL(request,db,thissytid ,thisgrdid ,dsid);
		sql = pub.EAFunc.Replace(sql,&amp;quot;[%SBH]&amp;quot;,SBH);
		sql = pub.EAFunc.Replace(sql,&amp;quot;[%ZTH]&amp;quot;,ZTH);
		sql = pub.EAFunc.Replace(sql,&amp;quot;[%YYMM]&amp;quot;,YYMM);
		sql = pub.EAFunc.Replace(sql,&amp;quot;[%YHZL]&amp;quot;,YHZL);
		sql = pub.EAFunc.Replace(sql,&amp;quot;[%PCH]&amp;quot;,PCH);
		sql = pub.EAFunc.Replace(sql,&amp;quot;[%CGBZ]&amp;quot;,CGBZ);
		
		//var cnt = db.GetSQLRowCount(sql);
		
		sql = &amp;quot;select count(*) cnt from ( &amp;quot; + sql + &amp;quot; )&amp;quot;;
		var ds = db.QuerySQL(sql);
		var cnt = ds.getStringAt(0,&amp;quot;CNT&amp;quot;);
		//var summny = ds.getStringAt(0,&amp;quot;SUMMNY&amp;quot;);
		//return cnt+&amp;quot;~&amp;quot;+summny;
		return cnt;
	}
	catch(e) {
		if (db != null) db.Rollback();
		return e.toString();
	}
	finally {
		if (db != null) db.Close();
	}
}


</GRDOSDS_VALUE></ROW>
</ROWSET>
</grdosds><grddscds>
<ROWSET>
<ROW num="0" ><ID >LoadQD</ID><NAME >打印清单</NAME><DATDSC >select t.*,rownum rn from (select dense_rank()over(order by b.YSZL_YHRZLSH) sx,
       b.BAE074 DJH, /*单据号*/
       b.AAB001 DWBH, /*单位编号*/
       b.AAB004 DWMC, /*单位名称*/
       b.AAE010 DWYHZH, /*单位银行账号*/
       d.rjlx, /*款项类别*/
       a.kxmc, /*明细款项*/
       decode(a.mxxh,&amp;apos;1&amp;apos;, BAZ501,
              &amp;apos;2&amp;apos;, BAZ502, &amp;apos;3&amp;apos;, BAZ503,
              &amp;apos;4&amp;apos;, BAZ504, &amp;apos;5&amp;apos;, BAZ505,
              &amp;apos;6&amp;apos;, BAZ506, &amp;apos;7&amp;apos;, BAZ507,
              &amp;apos;8&amp;apos;, BAZ508, &amp;apos;9&amp;apos;, BAZ509,
              &amp;apos;10&amp;apos;, BAZ510, &amp;apos;11&amp;apos;, BAZ511,
              &amp;apos;12&amp;apos;, BAZ512, &amp;apos;13&amp;apos;, BAZ513,
              &amp;apos;14&amp;apos;, BAZ514, &amp;apos;15&amp;apos;, BAZ515) je, /*金额*/
       decode(b.BAZ901,&amp;apos;0000&amp;apos;,decode(b.BAZ902,&amp;apos;&amp;apos;,&amp;apos;成功&amp;apos;,b.BAZ902),b.BAZ902) CLJG /*处理结果*回盘失败原因/手工托收失败原因*/
       /*,b.bac004,b.BAE036,b.YSZL_YHRZLSH*/
  from cw_rjlxmxb a, ac95 b, cw_sbsb c, cw_rjlxb d
 where a.sbh = c.sbh(+)
   and a.zth = b.zth(+)
   and b.AAA027 = C.TCQBM
   and a.sbh = &amp;apos;[%SBH]&amp;apos;
   and a.zth = &amp;apos;[%ZTH]&amp;apos;
   and a.sbh = d.sbh
   and a.zth = d.zth
   and a.lxbh = b.BIE086
   and a.lxbh = d.lxbh
   and ((a.mxxh = 1 and b.BAZ501 &amp;lt;&amp;gt; to_number(0)) or
       (a.mxxh = 2 and b.BAZ502 &amp;lt;&amp;gt; to_number(0)) or
       (a.mxxh = 3 and b.BAZ503 &amp;lt;&amp;gt; to_number(0)) or
       (a.mxxh = 4 and b.BAZ504 &amp;lt;&amp;gt; to_number(0)) or
       (a.mxxh = 5 and b.BAZ505 &amp;lt;&amp;gt; to_number(0)) or
       (a.mxxh = 6 and b.BAZ506 &amp;lt;&amp;gt; to_number(0)) or
       (a.mxxh = 7 and b.BAZ507 &amp;lt;&amp;gt; to_number(0)) or
       (a.mxxh = 8 and b.BAZ508 &amp;lt;&amp;gt; to_number(0)) or
       (a.mxxh = 9 and b.BAZ509 &amp;lt;&amp;gt; to_number(0)) or
       (a.mxxh = 10 and b.BAZ510 &amp;lt;&amp;gt; to_number(0)) or
       (a.mxxh = 11 and b.BAZ511 &amp;lt;&amp;gt; to_number(0)) or
       (a.mxxh = 12 and b.BAZ512 &amp;lt;&amp;gt; to_number(0)) or
       (a.mxxh = 13 and b.BAZ513 &amp;lt;&amp;gt; to_number(0)) or
       (a.mxxh = 14 and b.BAZ514 &amp;lt;&amp;gt; to_number(0)) or
       (a.mxxh = 15 and b.BAZ515 &amp;lt;&amp;gt; to_number(0)))
   and DECODE(NVL(b.BAZ901, &amp;apos;NUL&amp;apos;), &amp;apos;NUL&amp;apos;, &amp;apos;0&amp;apos;, &amp;apos;1&amp;apos;) LIKE &amp;apos;1%&amp;apos; /*已回盘*/
   and d.rjlx like &amp;apos;%收%&amp;apos;
   AND b.AAE208 = &amp;apos;[%YYMM]&amp;apos; /*生成年月*/
    [%CGBZ] /**成败标志*/
   AND b.BAE419 like &amp;apos;[%YHZL]&amp;apos; /*BAE419：社保开户银行*/
   and b.BAE415 = &amp;apos;[%PCH]&amp;apos;
 order by b.bac004,b.BAE036,b.YSZL_YHRZLSH,B.BIE086,a.mxxh) t</DATDSC><C4 >LoadQD</C4><C5 >LoadQD</C5><C6 >LoadQD</C6><C7 >LoadQD</C7><C8 >LoadQD</C8><C9 ></C9><C10 >LoadQD</C10><C11 ></C11><C12 >LoadQD</C12><C13 >LoadQD</C13><C14 >LoadQD</C14></ROW>
<ROW num="1" ><ID >LoadZH</ID><NAME >社保帐号</NAME><DATDSC >select distinct BAE309,BAE310,BAC001
  from cw_rjlxmxb a, ac95 b, cw_sbsb c, cw_rjlxb d
 where a.sbh = c.sbh(+)
   and a.zth = b.zth(+)
   and b.AAA027 = C.TCQBM
   and a.sbh = &amp;apos;[%SBH]&amp;apos;
   and a.zth = &amp;apos;[%ZTH]&amp;apos;
   and a.sbh = d.sbh
   and a.zth = d.zth
   and a.lxbh = b.BIE086
   and a.lxbh = d.lxbh
   and ((a.mxxh = 1 and b.BAZ501 &amp;lt;&amp;gt; to_number(0)) or
       (a.mxxh = 2 and b.BAZ502 &amp;lt;&amp;gt; to_number(0)) or
       (a.mxxh = 3 and b.BAZ503 &amp;lt;&amp;gt; to_number(0)) or
       (a.mxxh = 4 and b.BAZ504 &amp;lt;&amp;gt; to_number(0)) or
       (a.mxxh = 5 and b.BAZ505 &amp;lt;&amp;gt; to_number(0)) or
       (a.mxxh = 6 and b.BAZ506 &amp;lt;&amp;gt; to_number(0)) or
       (a.mxxh = 7 and b.BAZ507 &amp;lt;&amp;gt; to_number(0)) or
       (a.mxxh = 8 and b.BAZ508 &amp;lt;&amp;gt; to_number(0)) or
       (a.mxxh = 9 and b.BAZ509 &amp;lt;&amp;gt; to_number(0)) or
       (a.mxxh = 10 and b.BAZ510 &amp;lt;&amp;gt; to_number(0)) or
       (a.mxxh = 11 and b.BAZ511 &amp;lt;&amp;gt; to_number(0)) or
       (a.mxxh = 12 and b.BAZ512 &amp;lt;&amp;gt; to_number(0)) or
       (a.mxxh = 13 and b.BAZ513 &amp;lt;&amp;gt; to_number(0)) or
       (a.mxxh = 14 and b.BAZ514 &amp;lt;&amp;gt; to_number(0)) or
       (a.mxxh = 15 and b.BAZ515 &amp;lt;&amp;gt; to_number(0)))
   and DECODE(NVL(b.BAZ901, &amp;apos;NUL&amp;apos;), &amp;apos;NUL&amp;apos;, &amp;apos;0&amp;apos;, &amp;apos;1&amp;apos;) LIKE &amp;apos;1%&amp;apos; /*已回盘*/
   and d.rjlx like &amp;apos;%收%&amp;apos;
   AND b.AAE208 = &amp;apos;[%YYMM]&amp;apos; /*生成年月*/
   [%CGBZ] /**成败标志*/
   AND b.BAE419 like &amp;apos;[%YHZL]&amp;apos; /*BAE419：社保开户银行*/
   and b.BAE415 = &amp;apos;[%PCH]&amp;apos; /*批次号*/
</DATDSC><C4 >LoadZH</C4><C5 ></C5><C6 >LoadZH</C6><C7 ></C7><C8 ></C8><C9 >LoadZH</C9><C10 >LoadZH</C10><C11 >LoadZH</C11><C12 ></C12><C13 ></C13><C14 ></C14></ROW>
<ROW num="2" ><ID >LoadZHJ</ID><NAME >金额总合计</NAME><DATDSC >select sum(t.je) zje from (select dense_rank()over(order by b.BAE074) sx,
       b.BAE074 DJH, /*单据号*/
       b.AAB001 DWBH, /*单位编号*/
       b.AAB004 DWMC, /*单位名称*/
       b.AAE010 DWYHZH, /*单位银行账号*/
       d.rjlx, /*款项类别*/
       a.kxmc, /*明细款项*/
       decode(a.mxxh,&amp;apos;1&amp;apos;, BAZ501,
              &amp;apos;2&amp;apos;, BAZ502, &amp;apos;3&amp;apos;, BAZ503,
              &amp;apos;4&amp;apos;, BAZ504, &amp;apos;5&amp;apos;, BAZ505,
              &amp;apos;6&amp;apos;, BAZ506, &amp;apos;7&amp;apos;, BAZ507,
              &amp;apos;8&amp;apos;, BAZ508, &amp;apos;9&amp;apos;, BAZ509,
              &amp;apos;10&amp;apos;, BAZ510, &amp;apos;11&amp;apos;, BAZ511,
              &amp;apos;12&amp;apos;, BAZ512, &amp;apos;13&amp;apos;, BAZ513,
              &amp;apos;14&amp;apos;, BAZ514, &amp;apos;15&amp;apos;, BAZ515) je, /*金额*/
       decode(b.BAZ901,&amp;apos;0000&amp;apos;,&amp;apos;成功&amp;apos;,&amp;apos;1001&amp;apos;,b.BAZ902) CLJG /*处理结果*回盘失败原因/手工托收失败原因*/
  from cw_rjlxmxb a, ac95 b, cw_sbsb c, cw_rjlxb d
 where a.sbh = c.sbh(+)
   and a.zth = b.zth(+)
   and b.AAA027 = C.TCQBM
   and a.sbh = &amp;apos;[%SBH]&amp;apos;
   and a.zth = &amp;apos;[%ZTH]&amp;apos;
   and a.sbh = d.sbh
   and a.zth = d.zth
   and a.lxbh = b.BIE086
   and a.lxbh = d.lxbh
   and ((a.mxxh = 1 and b.BAZ501 &amp;lt;&amp;gt; to_number(0)) or
       (a.mxxh = 2 and b.BAZ502 &amp;lt;&amp;gt; to_number(0)) or
       (a.mxxh = 3 and b.BAZ503 &amp;lt;&amp;gt; to_number(0)) or
       (a.mxxh = 4 and b.BAZ504 &amp;lt;&amp;gt; to_number(0)) or
       (a.mxxh = 5 and b.BAZ505 &amp;lt;&amp;gt; to_number(0)) or
       (a.mxxh = 6 and b.BAZ506 &amp;lt;&amp;gt; to_number(0)) or
       (a.mxxh = 7 and b.BAZ507 &amp;lt;&amp;gt; to_number(0)) or
       (a.mxxh = 8 and b.BAZ508 &amp;lt;&amp;gt; to_number(0)) or
       (a.mxxh = 9 and b.BAZ509 &amp;lt;&amp;gt; to_number(0)) or
       (a.mxxh = 10 and b.BAZ510 &amp;lt;&amp;gt; to_number(0)) or
       (a.mxxh = 11 and b.BAZ511 &amp;lt;&amp;gt; to_number(0)) or
       (a.mxxh = 12 and b.BAZ512 &amp;lt;&amp;gt; to_number(0)) or
       (a.mxxh = 13 and b.BAZ513 &amp;lt;&amp;gt; to_number(0)) or
       (a.mxxh = 14 and b.BAZ514 &amp;lt;&amp;gt; to_number(0)) or
       (a.mxxh = 15 and b.BAZ515 &amp;lt;&amp;gt; to_number(0)))
   and DECODE(NVL(b.BAZ901, &amp;apos;NUL&amp;apos;), &amp;apos;NUL&amp;apos;, &amp;apos;0&amp;apos;, &amp;apos;1&amp;apos;) LIKE &amp;apos;1%&amp;apos; /*已回盘*/
   and d.rjlx like &amp;apos;%收%&amp;apos;
   AND b.AAE208 = &amp;apos;[%YYMM]&amp;apos; /*生成年月*/
   [%CGBZ]/**成败标志*/
   AND b.BAE419 like &amp;apos;[%YHZL]&amp;apos; /*BAE419：社保开户银行*/
   and b.BAE415 = &amp;apos;[%PCH]&amp;apos; /*批次号*/
order by b.BAE074,B.BIE086,a.mxxh) t</DATDSC><C4 ></C4><C5 ></C5><C6 ></C6><C7 ></C7><C8 ></C8><C9 >LoadZHJ</C9><C10 ></C10><C11 ></C11><C12 ></C12><C13 ></C13><C14 ></C14></ROW>
</ROWSET>
</grddscds><fldhdr>
<ROWSET>
<ROW num="0" ><BILID >1单据编号</BILID><STAT >0单据状态</STAT><SUBTYP >0子类型</SUBTYP><CORPID >0往来单位编号</CORPID><CORPNAM >0往来单位名称</CORPNAM><LOCID >0仓库|部门编号</LOCID><LOCNAM >0仓库|部门名称</LOCNAM><DAT >0单据日期</DAT><CRTUSR >1录入人</CRTUSR><CRTUSRNAM >0录入人姓名</CRTUSRNAM><CRTDAT >0录入日期</CRTDAT><CHKUSR >1审核人</CHKUSR><CHKUSRNAM >0审核人姓名</CHKUSRNAM><CHKDAT >0审核日期</CHKDAT><SUMQTY >0合计金额</SUMQTY><SUMMNY >0合计金额</SUMMNY><REFID1 >0扩展字段</REFID1><REFNAM1 >0扩展字段</REFNAM1><REFID2 >0扩展字段</REFID2><REFNAM2 >0扩展字段</REFNAM2><REFID3 >0扩展字段</REFID3><REFNAM3 >0扩展字段</REFNAM3><REFID4 >0扩展字段</REFID4><REFNAM4 >0扩展字段</REFNAM4><REFID5 >0扩展字段</REFID5><REFNAM5 >0扩展字段</REFNAM5><REFID6 >0扩展字段</REFID6><REFNAM6 >0扩展字段</REFNAM6><NOTE >0备注</NOTE></ROW>
</ROWSET>
</fldhdr><flddtl>
<ROWSET>
<ROW num="0" ><SEQID >1明细序号</SEQID><ITMID >1品种编号</ITMID><ITMNAM >0品种名称</ITMNAM><ITEMPC >0品种批次号</ITEMPC><ITMSPC >0规格</ITMSPC><UNIT >0计量单位</UNIT><SMLUNT >0小计量单位</SMLUNT><UNTNUM >0大单位转小单位因子</UNTNUM><PRICE >0价格</PRICE><QTY >0数量</QTY><TAXTYP >0税率类型</TAXTYP><NOTAXMNY >0不含税税额</NOTAXMNY><TAXMNY >0税额</TAXMNY><MNY >0下单金额</MNY><REFID1 >0扩展字段</REFID1><REFNAM1 >0扩展字段</REFNAM1><REFID2 >0扩展字段</REFID2><REFNAM2 >0扩展字段</REFNAM2><REFID3 >0扩展字段</REFID3><REFNAM3 >0扩展字段</REFNAM3><REFID4 >0扩展字段</REFID4><REFNAM4 >0扩展字段</REFNAM4><REFID5 >0扩展字段</REFID5><REFNAM5 >0扩展字段</REFNAM5></ROW>
</ROWSET>
</flddtl></mdroot>