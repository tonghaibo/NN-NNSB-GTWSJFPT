<?xml version='1.0' encoding='GBK'?><mdroot><grdds>
<ROWSET>
<ROW num="0" ><MWTYP >M</MWTYP><MWID >RepCreate</MWID><NAME >报表生成</NAME><NOTE ></NOTE><NOACCNAME >1</NOACCNAME><FILE >RepCreate.zxg</FILE><SCENE ></SCENE><FIXED ></FIXED><CATTYP ></CATTYP><DTLRNG ></DTLRNG><BATINP ></BATINP><MANUNIT ></MANUNIT><USESMLUNT ></USESMLUNT><ITEMTABLE ></ITEMTABLE><BILHDRTABLE ></BILHDRTABLE><BILDTLTABLE ></BILDTLTABLE><COLLIST ></COLLIST><WHERE ></WHERE><ORDER ></ORDER><DBNAME ></DBNAME><LISTSUM ></LISTSUM><LOADDATA ></LOADDATA><CHECKTITLE ></CHECKTITLE><IFBILL ></IFBILL><EXTJS ></EXTJS><JAVACLS ></JAVACLS><POST2MWID ></POST2MWID><LMS ></LMS><syt >SBCW</syt></ROW>
</ROWSET>
</grdds><grdjsds>
<ROWSET>
<ROW num="0" ><GRDJSDS_VALUE >var sheet = 0;
var ZXGFILE1 = &amp;quot;&amp;quot;;
var replocid = &amp;quot;&amp;quot;; //报表位置编号
var selectCNT = 0;
var selectBBLX = &amp;quot;&amp;quot;;
var selectBBYM = &amp;quot;&amp;quot;;
var selectBBS;
var intervalProcess;

//数据加载完毕
function _thisOnpost_loaddata(sheet)
{
	_sql.querytods(&amp;quot;ZTQDYM&amp;quot;,&amp;quot;&amp;quot;);
	var qdym = _this.XMLDS_GetString(0,&amp;quot;QDYM&amp;quot;);
	var yymm =_this.CreateListValueByXMLDS(_this.HttpCall(homeurl+&amp;quot;/XmlDB.sp?bind=V_YYYY_MM&amp;where=id&amp;gt;=&amp;apos;&amp;quot;+qdym+&amp;quot;&amp;apos;&amp;quot;),&amp;quot;ID&amp;quot;,&amp;quot;NAME&amp;quot;);
	_this.SetToComboBox(&amp;quot;_yymm&amp;quot;,sheet,5,2,yymm);

	var subtypList = _this.CreateListValue();
	_this.SetListValue(subtypList,&amp;quot;1&amp;quot;,&amp;quot;月报&amp;quot;);
	_this.SetListValue(subtypList,&amp;quot;2&amp;quot;,&amp;quot;季报&amp;quot;);
	_this.SetListValue(subtypList,&amp;quot;3&amp;quot;,&amp;quot;预算&amp;quot;);
	_this.SetListValue(subtypList,&amp;quot;4&amp;quot;,&amp;quot;决算&amp;quot;);
	_this.SetToRadioBox(&amp;quot;&amp;quot;,sheet,3,2,subtypList);
	
	_this.SplitSheet(sheet,&amp;quot;H&amp;quot;,&amp;quot;35%&amp;quot;);
	_this.ShowToolBar(0);
		
	ZXGFILE1 = _this.SaveTempZXGFile(1);	
	
	_sql.querytods(&amp;quot;REPLOC&amp;quot;,&amp;quot;&amp;quot;);	
	replocid = _this.XMLDS_GetString(0,&amp;quot;BMBH&amp;quot;);
	if (replocid == &amp;quot;&amp;quot;) {
		alert(&amp;quot;没有找到报表位置信息,请到报表定义-&amp;gt;报表存放位置模块进行定义!&amp;quot;);
		return;
	}
	
	loadReport(G_ACCID,replocid);
		
	_this.AutoFixScreenWidth();

}

function loadReport(accid,replocid)
{	
	var subtyp = _this.GetCellText(0,3,2);
	var yymm = _this.GetCellText(0,5,2);
	selectBBLX = subtyp;
	selectBBYM = yymm;
	
	if (subtyp == &amp;quot;&amp;quot;) {
		subtyp = &amp;quot;1&amp;quot;;
		_this.SetCellText(0,3,2,subtyp);
	}
	if (yymm == &amp;quot;&amp;quot;) {
		yymm = G_LOGDAT.substring(0,7);
		_this.SetCellText(0,5,2,yymm);
	}
	
	_this.LoadZXGFile(ZXGFILE1,-1,1);
	_this.SetFixedRow(1,1);
	_this.SetFixedCol(1,2);
	_this.SetColVisible(1,5,-1);
	_this.SetColVisible(1,6,-1);
	
	_this.SetAttribe(&amp;quot;SHEET_1&amp;quot;,_this.ATTR_SHEET_SELECTFLAG,_this. SELECTFLAG_SINGLEROW );
	
	
	var xml = _sql.query(&amp;quot;MAIN&amp;quot;,&amp;quot;REPSUBTYPE=&amp;quot;+subtyp+&amp;quot;&amp;YYMM=&amp;quot;+yymm+&amp;quot;&amp;ACCID=&amp;quot;+accid+&amp;quot;&amp;REPLOCID=&amp;quot;+replocid);
	_this.SetMainCellRange(1,1,1,6,_this.GetColCount(1)-1);
	_this.SetXmlDS(1,1,1,6,_this.GetColCount(1)-1,xml);
	_this.SetToBoolBox(1,0,1); 
	for (var r=1;r&amp;lt;_this.GetRowCount(1);r++) {
		_this.SetToBoolBox(1,r,1);
		if (_this.GetCellText(1,r,2) == &amp;quot;&amp;quot;) {
			_this.SetRowVisible(1,r,-1);
		}
		
		var stat = _this.GetCellText(1,r,4); //decode(nvl(b.stat,&amp;apos;0&amp;apos;),&amp;apos;0&amp;apos;,&amp;apos;未制表&amp;apos;,&amp;apos;1&amp;apos;,&amp;apos;未审核&amp;apos;,&amp;apos;2&amp;apos;,&amp;apos;已审核&amp;apos;)
		if (stat == &amp;quot;0&amp;quot;) {
			_this.SetCellColor(1,r,4,255,0,0);
			_this.SetCellShowText(1,r,4,&amp;quot;未制单&amp;quot;);
		}
		else if (stat == &amp;quot;1&amp;quot;) {
			_this.SetCellColor(1,r,4,120,112,110);
			_this.SetCellShowText(1,r,4,&amp;quot;未审核&amp;quot;);
		}
		else if (stat == &amp;quot;2&amp;quot;) {
			_this.SetCellColor(1,r,4,0,0,255);
			_this.SetCellShowText(1,r,4,&amp;quot;已审核&amp;quot;);
		}
	}
	
	_this.AutoFixScreenWidth();
	
}

//修改单元格内容
function _thisOnCellModify(sheet,row,col,oldvalue,newvalue)
{
	if (sheet == 0) {
		loadReport(G_ACCID,replocid);
	}
	else if (sheet == 1) {
		if (row == 0 &amp;&amp; col == 1) {
			for (var r=_this.GetMainCellRangeRow1(sheet);r&amp;lt;=_this.GetMainCellRangeRow2(sheet);r++) {
				_this.SetCellText(sheet,r,1,newvalue);
				if (newvalue == 1) selectCNT ++;
				if (newvalue == 0) selectCNT --;
			}
		}
		else {
			if (newvalue == 1) selectCNT ++;
			if (newvalue == 0) selectCNT --;
		}
	}
}

//点击按钮
function _thisOnButtonCtrlClick(id,sheet,row,col)
{
	if (id == &amp;quot;生成报表&amp;quot;) {
		//增加权限控制
		var author = invokeOSFunc(&amp;quot;GenReport&amp;quot;,&amp;quot;&amp;quot;);
		if (author != 1) {
			alert(&amp;quot;对不起，你没有该操作权限！&amp;quot;);
			return;
		}
		
		var str = &amp;quot;&amp;quot;;
		var yymm = _this.GetCellText(sheet,5,2);
		var orgid = G_ORGID;
		var accid = G_ACCID;
		var arrayObj = new Array();
		_this.SetCellColor(sheet,10,1,255,0,0);
		
		var doAction = &amp;quot;&amp;quot;;
		var doResult = &amp;quot;&amp;quot;;
		
		for (var r=_this.GetMainCellRangeRow1(1);r&amp;lt;=_this.GetMainCellRangeRow2(1);r++) {
			var flag = _this.GetCellText(1,r,1);
			var repid = _this.GetCellText(1,r,2);
			var repname = _this.GetCellText(1,r,3);
			var guid = _this.GetCellText(1,r,5);
			var grdid = _this.GetCellText(1,r,6);
			var stat = _this.GetCellText(1,r,4);
			var statnam = _this.GetCellShowText(1,r,4);
			
			if (flag == &amp;quot;1&amp;quot; &amp;&amp; repid != &amp;quot;&amp;quot;) {
				var arr = new Array([5]);	//repid，repname，guid
	
				if (guid != &amp;quot;&amp;quot;) {
					//var crtusr = _this.XMLDS_GetString(r, &amp;quot;crtusr&amp;quot;);
					//var crtdat = _this.XMLDS_GetString(r, &amp;quot;crtdat&amp;quot;);
					if ( stat != &amp;quot;1&amp;quot; ) {
						alert(repname +&amp;quot; ‘&amp;quot;+ statnam +&amp;quot;’ 不能操作！&amp;quot;);
						str += repname +&amp;quot; ‘&amp;quot;+ statnam +&amp;quot;’ 不能操作！\n&amp;quot;;
						continue;
					} else {
						if (selectCNT == 1) {
							if ( confirm(repname +&amp;quot;  数据已经生成，是否覆盖？&amp;quot;) ) {
								str += repname+&amp;quot; 已制作， 重新生成！\n&amp;quot;;
							} else {
								str += repname+&amp;quot; 已制作， 不生成！\n&amp;quot;;
								continue;
							}
						}
						else {
							if (doAction != 1) {
								var tips = repname +&amp;quot;  数据已经生成，是否覆盖？&amp;quot;;
								var param = window.showModalDialog(&amp;quot;show.sp?grdid=RepCreateParam&amp;tips=&amp;quot;+tips,&amp;quot;&amp;quot;,&amp;quot;dialogWidth=400px;dialogHeight=200px;&amp;quot;);
								try { 
									doAction = param.doall;
									doResult = param.result;
									if (param.result == 1) {
										str += repname+&amp;quot; 已制作， 重新生成！\n&amp;quot;;
									}
									if (param.result == 0) {
										str += repname+&amp;quot; 已制作， 不生成！\n&amp;quot;;
										continue;
									}
								}catch (e) {
									break;
								}
							}
							if (doAction == 1) {
								if (doResult == 1) {
									str += repname+&amp;quot; 已制作， 重新生成！\n&amp;quot;;
								}
								if (doResult == 0) {
									str += repname+&amp;quot; 已制作， 不生成！\n&amp;quot;;
									continue;
								}
							}
						}

					}
				}
				else {
					//str += &amp;quot;生成[&amp;quot;+repid+&amp;quot;]&amp;quot; + repname + &amp;quot;(&amp;quot; + yymm + &amp;quot;)...\n&amp;quot;;
				}
				
				arr[0] = repid;
				arr[1] = repname;
				arr[2] = guid;
				arr[3] = grdid;
				arr[4] = 0;
				arrayObj.push(arr);
			}
		}
		//_this.SetCellText(sheet,10,1,str);
		parent.document.frames[&amp;quot;_note&amp;quot;].newmsg(str);

		if (arrayObj.length != 0) {
			selectBBS = arrayObj;
			genSaveRep(orgid,accid,yymm,arrayObj);
		}
		else {
			alert(&amp;quot;请选择需要生成的报表！&amp;quot;);
		}
	}
	
}

//打开并保存报表
function genSaveRep(orgid,accid,yymm,arrayObj)
{
	for (var j = 0; j &amp;lt; arrayObj.length; j ++) {
		var repid = arrayObj[j][0];
		var repname = arrayObj[j][1];
		var guid = arrayObj[j][2];
		var grdid = arrayObj[j][3];
		
		//删除已有目标报表
		if (guid != &amp;quot;&amp;quot;) {
			var ret = invokeOSFunc(&amp;quot;DeleteRep&amp;quot;, &amp;quot;mwid=&amp;quot;+grdid+&amp;quot;&amp;orgid=&amp;quot;+orgid+&amp;quot;&amp;accid=&amp;quot;+accid+&amp;quot;&amp;yymm=&amp;quot;+yymm+&amp;quot;&amp;guid=&amp;quot;+guid);
//			alert(ret);
//			_this.SetCellText(0,10,1,ret);
//			return;
		}
		//打开目标报表
		guid = accid+&amp;quot;_&amp;quot;+repid+&amp;quot;_&amp;quot;+yymm;
		var sheetname = repname;
		if (sheetname.length &amp;gt; 14) sheetname = sheetname.substring(0,11) + &amp;quot;...&amp;quot;;

		var url = &amp;quot;show.sp?grdid=&amp;quot;+grdid+&amp;quot;&amp;repid=&amp;quot;+repid+&amp;quot;&amp;yymm=&amp;quot;+yymm+&amp;quot;&amp;thisaccid=&amp;quot;+accid
			+&amp;quot;&amp;thisorgid=&amp;quot;+orgid+&amp;quot;&amp;accid=&amp;quot;+accid+&amp;quot;&amp;repnam=&amp;quot;+repname+&amp;quot;&amp;replocid=&amp;quot;+replocid+&amp;quot;&amp;isSave=true&amp;showhead=0&amp;quot;;
		//if (sheetname.length &amp;gt; 10) sheetname = sheetname.substring(0,10)+&amp;quot;...&amp;quot;;
		
		parent.wnd.addex( guid,accid,repid,yymm,sheetname,url,&amp;quot;正在生成...&amp;lt;br&amp;gt;&amp;quot;);

	}
	
	intervalProcess = setInterval(&amp;quot;refresh()&amp;quot;,500);

}

//鼠标双击
function _thisOnMouseDClick(sheet,row,col)
{
	if (sheet == 1) {
		if (row &amp;gt;= _this.GetMainCellRangeRow1(sheet) &amp;&amp; row &amp;lt;= _this.GetMainCellRangeRow2(sheet)) {
			var grdid = _this.GetCellText(sheet,row,6);
			var guid = _this.GetCellText(sheet,row,5);
			var repid = _this.GetCellText(sheet,row,2);
			var repname = _this.GetCellText(sheet,row,3);
			var yymm = _this.GetCellText(0,5,2);
			
			if (guid != &amp;quot;&amp;quot;) {
				var url = &amp;quot;show.sp?grdid=&amp;quot;+grdid+&amp;quot;&amp;guid=&amp;quot;+guid+&amp;quot;&amp;repid=&amp;quot;+repid+&amp;quot;&amp;yymm=&amp;quot;+yymm+&amp;quot;&amp;thisaccid=&amp;quot;+G_ACCID
					+&amp;quot;&amp;thisorgid=&amp;quot;+G_ORGID+&amp;quot;&amp;accid=&amp;quot;+G_ACCID+&amp;quot;&amp;repnam=&amp;quot;+repname+&amp;quot;&amp;replocid=&amp;quot;+replocid;
				window.open(url);
			}
		}
	}
}

function refresh()
{
	_this.SetCellText(0,3,2,selectBBLX);
	_this.SetCellText(0,5,2,selectBBYM);
	loadReport(accid,replocid); //刷新报表状态列表
	var str = &amp;quot;&amp;quot;;
	var yymm = _this.GetCellText(0,5,2);
		
	var endstat = 1;
	var cnt = 0;
	for (var i=0; i&amp;lt;selectBBS.length; i++) {
		var repid = selectBBS[i][0];
		var stat = selectBBS[i][4];
		if (stat == 1) cnt ++;
		if (stat == 0) endstat = 0;
		for (var r=_this.GetMainCellRangeRow1(1);r&amp;lt;=_this.GetMainCellRangeRow2(1);r++) {
			var zt = _this.GetCellText(1,r,4); //状态
			var repname = _this.GetCellText(1,r,3); 
			if (repid == _this.GetCellText(1,r,2)) {
				_this.SetCellText(1,r,1,1);
				selectBBS[i][4] = zt;
				var str2 = &amp;quot;&amp;quot;;
				if (zt == 0) {
					str2 = &amp;quot;正在生成[&amp;quot;+repid+&amp;quot;]&amp;quot; + repname + &amp;quot;(&amp;quot; + yymm + &amp;quot;)...\n&amp;quot;;
				}
				else if (zt == 1) {
					str2 = &amp;quot;[&amp;quot;+repid+&amp;quot;]&amp;quot; + repname + &amp;quot;(&amp;quot; + yymm + &amp;quot;)生成完成\n&amp;quot;;
				}
				str += str2;
				parent.document.frames[&amp;quot;_note&amp;quot;].newmsg(str2);
			}
		}
	}
	parent.document.frames[&amp;quot;_note&amp;quot;].welcomemsg = str;
	parent.document.frames[&amp;quot;_note&amp;quot;].newmsg(str);
	
	if (endstat == 1 &amp;&amp; cnt == selectBBS.length) {
		clearInterval(intervalProcess);
	}
}
</GRDJSDS_VALUE></ROW>
</ROWSET>
</grdjsds><grdosds>
<ROWSET>
<ROW num="0" ><GRDOSDS_VALUE >var pub = new JavaPackage(&amp;quot;com.xlsgrid.net.pub&amp;quot;);

function GetReplist()
{
	var ds;
  	var sql = &amp;quot;select a.id,a.name,b.guid,b.stat,c.name statnam,
		b.crtusr,to_char(b.crtdat,&amp;apos;YYYY-MM-DD HH24:MI:SS&amp;apos;) crtdat
		from v_finreporg a,v_repmodel b,v_stat c
		where a.orgid=b.org(+) and a.id=b.viewtyp(+)
		and b.stat=c.id(+) and a.orgid=&amp;apos;%s&amp;apos; and a.typ=&amp;apos;%s&amp;apos;
		and b.yymm(+)=&amp;apos;%s&amp;apos; and b.acc(+)=&amp;apos;%s&amp;apos; and a.year=substr(&amp;apos;%s&amp;apos;,1,4) &amp;quot;
		.format([thisorgid,reptyp,yymm,accid,yymm]);
	var mm = yymm.substring(5,7);
	
  	if ( mm == &amp;quot;03&amp;quot; || mm == &amp;quot;06&amp;quot; || mm == &amp;quot;09&amp;quot; || mm == &amp;quot;12&amp;quot; ) {
  		if (mm == &amp;quot;12&amp;quot;) {
  			sql += &amp;quot; and a.subtyp in (&amp;apos;月报&amp;apos;,&amp;apos;季报&amp;apos;,&amp;apos;年报&amp;apos;) &amp;quot;;
  		} else {
  			sql += &amp;quot; and a.subtyp in (&amp;apos;月报&amp;apos;,&amp;apos;季报&amp;apos;) &amp;quot;;
  		}
  	} else {
  		sql += &amp;quot;and a.subtyp=&amp;apos;月报&amp;apos; &amp;quot;;
  	}
  	sql += &amp;quot; order by a.subtyp,a.id&amp;quot;;
//  	throw new Exception(sql);
  	try { ds = pub.EADbTool.QuerySQL(sql); } catch ( e ) { ds = new pub.EAXmlDS(); }
	
  	return ds.GetXml();
  	
}

//生成报表权限检查
function GenReport()
{
	return &amp;quot;1&amp;quot;;
}

function DeleteRep()
{
	var db = null;
	var sql = &amp;quot;&amp;quot;;
	var eagrdxmldb = new xmldb.EAGRDXmlDB(&amp;quot;SBCW&amp;quot;,mwid);
	var grdds = eagrdxmldb.getGrdDS();
	var bilhdrtable = grdds.getStringAt(0,&amp;quot;BILHDRTABLE&amp;quot;);
	var bildtltable = grdds.getStringAt(0,&amp;quot;BILDTLTABLE&amp;quot;);
	
	//return eagrdxmldb.getGrdCelDS().GetXml();

	try {
		db = new pub.EADatabase();
		sql = &amp;quot;delete from %s where org=&amp;apos;%s&amp;apos; and acc=&amp;apos;%s&amp;apos; and yymm=&amp;apos;%s&amp;apos; and guid=&amp;apos;%s&amp;apos; and syt=&amp;apos;SBCW&amp;apos;&amp;quot;.format([bilhdrtable,orgid,accid,yymm,guid]);
		db.ExcecutSQL(sql);
	    	sql = &amp;quot;delete from %s where org=&amp;apos;%s&amp;apos; and acc=&amp;apos;%s&amp;apos; and formguid=&amp;apos;%s&amp;apos; and syt=&amp;apos;SBCW&amp;apos;&amp;quot;.format([bildtltable,orgid,accid,guid]);
		db.ExcecutSQL(sql);
		//删除报表实例
		sql = &amp;quot;delete from repmodel where guid=&amp;apos;%s&amp;apos;&amp;quot;.format([guid]);
		db.ExcecutSQL(sql);
		db.Commit();
	} catch( e ) {
		db.Rollback();
		throw new Exception(e.toString());
	} finally {
		if (db != null) db.Close();
	}
}
</GRDOSDS_VALUE></ROW>
</ROWSET>
</grdosds><grddscds>
<ROWSET>
<ROW num="0" ><ID >MAIN</ID><NAME ></NAME><DATDSC >select &amp;apos;&amp;apos; flag,reportid,reportname,stat,guid,grdid from (
select nvl(max(b.stat),&amp;apos;0&amp;apos;) stat,reportid,reportname,a.sortid,b.guid,a.grdid 
from fin_repmodel a, v_repmodel b,fin_reporg c
where a.reporttimetype=&amp;apos;[%REPSUBTYPE]&amp;apos;
  and a.reportid=b.repid(+)
  and a.yszth=(select yszth from cw_ztb where acc=&amp;apos;[%ACCID]&amp;apos;)
  and b.yymm(+)=&amp;apos;[%YYMM]&amp;apos;
  and b.acc(+)=&amp;apos;[%ACCID]&amp;apos; 
  and b.replocid(+)=&amp;apos;[%REPLOCID]&amp;apos;
  and a.reportid=c.repmodid
  and c.orgid=&amp;apos;[%SYS_ORGID]&amp;apos;
  and 100*nvl(c.endyear,&amp;apos;9999&amp;apos;)+1*nvl(c.endmm,&amp;apos;99&amp;apos;)&amp;gt;=1*(substr(&amp;apos;[%YYMM]&amp;apos;,0,4)||substr(&amp;apos;[%YYMM]&amp;apos;,6,2))
  and 100*a.startyear+a.startmonth&amp;lt;=1*to_char(sysdate,&amp;apos;YYYYMM&amp;apos;)
  and a.isused=&amp;apos;1&amp;apos;
group by  reportid,reportname,sortid,b.guid,a.grdid 
)
order by sortid,reportid
</DATDSC><C4 >MAIN</C4><C5 >MAIN</C5><C6 >MAIN</C6><C7 ></C7><C8 >MAIN</C8><C9 >MAIN</C9><C10 >MAIN</C10></ROW>
<ROW num="1" ><ID >REPLOC</ID><NAME ></NAME><DATDSC >select * from oa_reploc where org=&amp;apos;[%SYS_ORGID]&amp;apos; and acc=&amp;apos;[%SYS_ACCID]&amp;apos;
and hzbz=&amp;apos;2&amp;apos; /*基本帐套*/</DATDSC><C4 ></C4><C5 ></C5><C6 ></C6><C7 >REPLOC</C7><C8 >REPLOC</C8><C9 ></C9><C10 ></C10></ROW>
<ROW num="2" ><ID >ZTQDYM</ID><NAME ></NAME><DATDSC >select substr(qdym,0,4)||&amp;apos;-&amp;apos;||substr(qdym,5,6) qdym
from cw_ztb where org=&amp;apos;[%SYS_ORGID]&amp;apos; and acc=&amp;apos;[%SYS_ACCID]&amp;apos;</DATDSC><C4 ></C4><C5 ></C5><C6 ></C6><C7 ></C7><C8 ></C8><C9 ></C9><C10 ></C10></ROW>
</ROWSET>
</grddscds><fldhdr>
<ROWSET>
<ROW num="0" ><BILID >1单据编号</BILID><STAT >0单据状态</STAT><SUBTYP >0子类型</SUBTYP><CORPID >0往来单位编号</CORPID><CORPNAM >0往来单位名称</CORPNAM><LOCID >0仓库|部门编号</LOCID><LOCNAM >0仓库|部门名称</LOCNAM><DAT >0单据日期</DAT><CRTUSR >1录入人</CRTUSR><CRTUSRNAM >0录入人姓名</CRTUSRNAM><CRTDAT >0录入日期</CRTDAT><CHKUSR >1审核人</CHKUSR><CHKUSRNAM >0审核人姓名</CHKUSRNAM><CHKDAT >0审核日期</CHKDAT><SUMQTY >0合计金额</SUMQTY><SUMMNY >0合计金额</SUMMNY><REFID1 >0扩展字段</REFID1><REFNAM1 >0扩展字段</REFNAM1><REFID2 >0扩展字段</REFID2><REFNAM2 >0扩展字段</REFNAM2><REFID3 >0扩展字段</REFID3><REFNAM3 >0扩展字段</REFNAM3><REFID4 >0扩展字段</REFID4><REFNAM4 >0扩展字段</REFNAM4><REFID5 >0扩展字段</REFID5><REFNAM5 >0扩展字段</REFNAM5><REFID6 >0扩展字段</REFID6><REFNAM6 >0扩展字段</REFNAM6><NOTE >0备注</NOTE></ROW>
</ROWSET>
</fldhdr><flddtl>
<ROWSET>
<ROW num="0" ><SEQID >1明细序号</SEQID><ITMID >1品种编号</ITMID><ITMNAM >0品种名称</ITMNAM><ITEMPC >0品种批次号</ITEMPC><ITMSPC >0规格</ITMSPC><UNIT >0计量单位</UNIT><SMLUNT >0小计量单位</SMLUNT><UNTNUM >0大单位转小单位因子</UNTNUM><PRICE >0价格</PRICE><QTY >0数量</QTY><TAXTYP >0税率类型</TAXTYP><NOTAXMNY >0不含税税额</NOTAXMNY><TAXMNY >0税额</TAXMNY><MNY >0下单金额</MNY><REFID1 >0扩展字段</REFID1><REFNAM1 >0扩展字段</REFNAM1><REFID2 >0扩展字段</REFID2><REFNAM2 >0扩展字段</REFNAM2><REFID3 >0扩展字段</REFID3><REFNAM3 >0扩展字段</REFNAM3><REFID4 >0扩展字段</REFID4><REFNAM4 >0扩展字段</REFNAM4><REFID5 >0扩展字段</REFID5><REFNAM5 >0扩展字段</REFNAM5></ROW>
</ROWSET>
</flddtl></mdroot>