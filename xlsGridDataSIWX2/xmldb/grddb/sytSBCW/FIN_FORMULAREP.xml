<?xml version='1.0' encoding='GBK'?><mdroot><grdds>
<ROWSET>
<ROW num="0" ><MWTYP >R</MWTYP><MWID >FIN_FORMULAREP</MWID><NAME >报表平衡公式分配</NAME><NOTE ></NOTE><NOACCNAME ></NOACCNAME><FILE >FIN_FORMULAREP.zxg</FILE><SCENE ></SCENE><FIXED ></FIXED><CATTYP ></CATTYP><DTLRNG ></DTLRNG><BATINP ></BATINP><MANUNIT ></MANUNIT><USESMLUNT ></USESMLUNT><ITEMTABLE ></ITEMTABLE><BILHDRTABLE ></BILHDRTABLE><BILDTLTABLE ></BILDTLTABLE><COLLIST ></COLLIST><WHERE ></WHERE><ORDER ></ORDER><DBNAME ></DBNAME><LISTSUM ></LISTSUM><LOADDATA ></LOADDATA><CHECKTITLE ></CHECKTITLE><IFBILL ></IFBILL><EXTJS ></EXTJS><JAVACLS ></JAVACLS><POST2MWID ></POST2MWID><LMS ></LMS><WIDTHMOD >1</WIDTHMOD><HEIGHTMOD ></HEIGHTMOD><CLIENTCLASS ></CLIENTCLASS><SHOWBTN >0</SHOWBTN><CLOSEPAGES ></CLOSEPAGES><syt >SBCW</syt></ROW>
</ROWSET>
</grdds><grdbtnds>
<ROWSET>
<ROW num="0" ><ID >Save</ID><NAME >保存</NAME><ACTTYP ></ACTTYP><URL ></URL><URLTARGET ></URLTARGET><TIP ></TIP><BTNORD ></BTNORD><IMG >5</IMG><IMGMOUSE >5</IMGMOUSE></ROW>
</ROWSET>
</grdbtnds><grdjsds>
<ROWSET>
<ROW num="0" ><GRDJSDS_VALUE >var ZXGFILE0;
var ZXGFILE1;
var ysztlist;
var reptypList;
var ftypList;
var _repid = &amp;quot;&amp;quot;;

//数据加载完毕
function _thisOnpost_loaddata(sheet)
{
	_this.SplitSheet(sheet,&amp;quot;H&amp;quot;,&amp;quot;30%&amp;quot;);
	
	ZXGFILE0 = _this.SaveTempZXGFile(0); 
	ZXGFILE1 = _this.SaveTempZXGFile(1);

	ysztlist =_this.CreateListValueByXMLDS(_this.HttpCall(homeurl+&amp;quot;/XmlDB.sp?bind=V_CW_YSZTB&amp;quot;),&amp;quot;ID&amp;quot;,&amp;quot;NAME&amp;quot;);
	reptypList =_this.CreateListValueByXMLDS(_this.HttpCall(homeurl+&amp;quot;/XmlDB.sp?bind=V_FINREPCLASS&amp;quot;),&amp;quot;ID&amp;quot;,&amp;quot;NAME&amp;quot;);
	ftypList =_this.CreateListValueByXMLDS(_this.HttpCall(homeurl+&amp;quot;/XmlDB.sp?bind=V_FINFORMULA&amp;quot;),&amp;quot;ID&amp;quot;,&amp;quot;NAME&amp;quot;);
	_this.SetListValue(ysztlist,&amp;quot;%&amp;quot;,&amp;quot;全部&amp;quot;);
	_this.SetListValue(reptypList,&amp;quot;%&amp;quot;,&amp;quot;全部&amp;quot;);
	_this.SetListValue(ftypList,&amp;quot;%&amp;quot;,&amp;quot;全部&amp;quot;);
	
	loadReport(&amp;quot;%&amp;quot;,&amp;quot;%&amp;quot;);
	loadFormula(&amp;quot;%&amp;quot;,&amp;quot;&amp;quot;,&amp;quot;&amp;quot;);
	
	
}

function loadReport(yszth,typ)
{
	_this.LoadZXGFile(ZXGFILE0,-1,0);
	_this.SetFixedRow(0,6);
	_this.SetFixedCol(0,1);
	
	_this.SetCellText(0,2,2,yszth);
	_this.SetCellText(0,3,2,typ);
	_this.SetToComboBox(&amp;quot;&amp;quot;, 0,2,2,ysztlist);
	_this.SetToComboBox(&amp;quot;&amp;quot;, 0,3,2,reptypList);
	
	_this.SetMainCellRange(0,6,1,8,2);
	_this.SetAttribe(&amp;quot;SHEET_0&amp;quot;,_this.ATTR_SHEET_SELECTFLAG,_this. SELECTFLAG_SINGLEROW );
	var xml = _sql.query(&amp;quot;REPDS&amp;quot;,&amp;quot;YSZTH=&amp;quot;+yszth+&amp;quot;&amp;TYP=&amp;quot;+typ);
	_this.SetXmlDS(0,6,1,8,2,xml);
	for (var r=_this.GetMainCellRangeRow1(0);r&amp;lt;=_this.GetMainCellRangeRow2(0);r++) {
		if (_this.GetCellText(0,r,1) != &amp;quot;&amp;quot;) {
			_this.SetToBoolBox(0,r,0);
		}
	}
	
	_this.AutoFixScreenWidth();
	
}

function loadFormula(typ,repid,fid)
{
	_this.LoadZXGFile(ZXGFILE1,-1,1);
	_this.SetFixedRow(1,6);
	_this.SetFixedCol(1,2);
	
	_this.SetColVisible(1,1,-1);
	_this.SetColVisible(1,2,-1);
	_this.SetColVisible(1,3,-1);
	
	_this.SetCellText(1,2,5,typ);
	_this.SetCellText(1,2,7,repid);
	_this.SetCellText(1,3,5,fid);
	_this.SetToComboBox(&amp;quot;&amp;quot;, 1,2,5,ftypList);
	
	_this.SetMainCellRange(1,6,0,8,8);
	_this.SetAttribe(&amp;quot;SHEET_1&amp;quot;,_this.ATTR_SHEET_SELECTFLAG,_this. SELECTFLAG_SINGLEROW );
	var xml = _sql.query(&amp;quot;FORMULADS&amp;quot;,&amp;quot;REPID=&amp;quot;+repid+&amp;quot;&amp;FID=&amp;quot;+fid+&amp;quot;&amp;TYP=&amp;quot;+typ);
	_this.SetXmlDS(1,6,0,8,8,xml);
	_this.SetToBoolBox(1,5,0);
	for (var r=_this.GetMainCellRangeRow1(1);r&amp;lt;=_this.GetMainCellRangeRow2(1);r++) {
		if (_this.GetCellText(1,r,1) != &amp;quot;&amp;quot;) {
			_this.SetToBoolBox(1,r,0);
			_this.SetToComboBox(&amp;quot;&amp;quot;, 1,r,7,ftypList);
		}
	}

	_this.AutoFixScreenWidth();
}

function filterFormula(typ,repid,fid)
{
	for (var r=_this.GetMainCellRangeRow1(1);r&amp;lt;=_this.GetMainCellRangeRow2(1);r++) {
		var lx = _this.GetCellText(1,r,7);
		var rpid = _this.GetCellText(1,r,3);
		var gsbh = _this.GetCellText(1,r,4);
		var show1=true,show2=true,show3=true;
		if (typ != &amp;quot;%&amp;quot;) {
			//if (lx == typ) { _this.SetRowVisible(1,r,1); } else { _this.SetRowVisible(1,r,-1); }
			if (lx == typ) { show1=true; } else { show1=false; }
		}
		else if (typ == &amp;quot;%&amp;quot;) {
			//_this.SetRowVisible(1,r,1);
			show1=true;
		}
		
		if (repid != &amp;quot;&amp;quot; ) {
			//if (rpid == repid) { _this.SetRowVisible(1,r,1); } 
			if (rpid == repid) { show2=true; } 
		}

		if (fid != &amp;quot;&amp;quot;) {
			//if(gsbh.substring(0,fid.length) == fid) { _this.SetRowVisible(1,r,1); } else { _this.SetRowVisible(1,r,-1); }
			if(gsbh.substring(0,fid.length) == fid) { show3=true; } else { show3=false; }
		}

		if (show1 &amp;&amp; show2 &amp;&amp; show3) {
			_this.SetRowVisible(1,r,1);
		}
		else {
			_this.SetRowVisible(1,r,-1);
		}	
	}
}

function selectReport(sheet,row)
{
	for (var r=_this.GetMainCellRangeRow1(sheet);r&amp;lt;=_this.GetMainCellRangeRow2(sheet);r++) {
		_this.SetCellText(sheet,r,0,0);
	}
	_this.SetCellText(0,row,0,1);
	_repid = _this.GetCellText(0,row,1);
	_this.SetCellText(1,2,7,_repid);
	var typ = _this.GetCellText(1,2,5);
	var fid = _this.GetCellText(1,3,5);
	loadFormula(typ,_repid,fid);
	
}

//修改单元格内容
function _thisOnCellModify(sheet,row,col,oldvalue,newvalue)
{
	if (sheet == 0) {
		if (col != 0) {
			var yszth = _this.GetCellText(0,2,2);
			var typ = _this.GetCellText(0,3,2);
			loadReport(yszth,typ);
		}
		else if (col == 0) {
			selectReport(0,row);
		}
	}
	else if (sheet == 1) {
		if (col != 0) {
			var typ = _this.GetCellText(1,2,5);
			var repid = _this.GetCellText(1,2,7);
			var fid = _this.GetCellText(1,3,5);
			filterFormula(typ,repid,fid);
		}
		else if (row == 5 &amp;&amp; col == 0) {
			for (var r=_this.GetMainCellRangeRow1(1);r&amp;lt;=_this.GetMainCellRangeRow2(1);r++) {
				if (_this.GetCellText(1,r,1) != &amp;quot;&amp;quot;) {
					if (_this.GetRowVisible(1,r) == 1) {
						_this.SetCellText(1,r,0,newvalue);
					}
				}
			}
		}
	}
}

//保存
function Save()
{
	if (_repid == &amp;quot;&amp;quot;) {
		alert(&amp;quot;请先选中需要分配的报表！&amp;quot;);
		return;
	}
	if (!confirm(&amp;quot;保存报表平衡公式分配，是否继续？&amp;quot;)) return;
	
	var param = new Object();
	param.xml = _this.GetXml(1,_this.GetMainCellRangeRow1(1),0,_this.GetMainCellRangeRow2(1),3);
	param.repid = _repid;
	
	var ret = invokeOSFuncExt(&amp;quot;Save&amp;quot;,param);
	if (ret == &amp;quot;ok&amp;quot;) {
		alert(&amp;quot;保存成功！&amp;quot;);
		var typ = _this.GetCellText(1,2,5);
		var fid = _this.GetCellText(1,3,5);
		loadFormula(typ,_repid,fid);
	}
	
}

//鼠标左键点击
function _thisOnMouseLClick(sheet,row,col)
{
	if (sheet == 0 &amp;&amp; row &amp;gt;= _this.GetMainCellRangeRow1(0) &amp;&amp; row &amp;lt;= _this.GetMainCellRangeRow2(0)) {
		selectReport(sheet,row);
	}
}
</GRDJSDS_VALUE></ROW>
</ROWSET>
</grdjsds><grdosds>
<ROWSET>
<ROW num="0" ><GRDOSDS_VALUE >var pub = new JavaPackage(&amp;quot;com.xlsgrid.net.pub&amp;quot;);

function Save()
{
	var db = null;
	var sql = &amp;quot;&amp;quot;;
	
	try {
		db = new pub.EADatabase();
		var ds = new pub.EAXmlDS(xml);
		for (var i=0;i&amp;lt;ds.getRowCount();i++) {
			var formulaguid = ds.getStringAt(i,&amp;quot;FORMULAGUID&amp;quot;);
			var guid = ds.getStringAt(i,&amp;quot;GUID&amp;quot;);
			var sel = ds.getStringAt(i,&amp;quot;SEL&amp;quot;);
			
			if (sel == &amp;quot;1&amp;quot; &amp;&amp; guid == &amp;quot;&amp;quot;) {				
				sql = &amp;quot;insert into fin_formularep(repid,formulaguid)values(&amp;apos;%s&amp;apos;,&amp;apos;%s&amp;apos;)&amp;quot;.format([repid,formulaguid]);
				db.ExcecutSQL(sql);
			}
			else if (sel == &amp;quot;0&amp;quot; &amp;&amp; formulaguid != &amp;quot;&amp;quot; &amp;&amp; guid != &amp;quot;&amp;quot;) {
				sql = &amp;quot;delete from fin_formularep where guid=&amp;apos;%s&amp;apos;&amp;quot;.format([guid]);
				db.ExcecutSQL(sql);
			}
		}
		db.Commit();
		
		return &amp;quot;ok&amp;quot;;
	}
	catch(e) {
		if (db != null) db.Rollback();
		return e.toString();
	}
	finally {
		if (db != null) db.Close();
	}
}

</GRDOSDS_VALUE></ROW>
</ROWSET>
</grdosds><grddscds>
<ROWSET>
<ROW num="0" ><ID >REPDS</ID><NAME ></NAME><DATDSC >select reportid,name 
from V_FINREP
where yszth like &amp;apos;[%YSZTH]%&amp;apos;
  and reporttype like &amp;apos;[%TYP]%&amp;apos;
order by id</DATDSC><C4 >REPDS</C4><C5 >REPDS</C5></ROW>
<ROW num="1" ><ID >FORMULADS</ID><NAME ></NAME><DATDSC >select decode(b.guid,null,0,1) sel,
       a.guid formulaguid,
       b.guid,
       b.repid,
       a.id,
       a.note,&amp;apos;&amp;apos;
       ,a.type,
       a.formula
from fin_formula a,fin_formularep b
where a.guid=b.formulaguid(+)
  and a.type like &amp;apos;[%TYP]%&amp;apos;
  and a.id like &amp;apos;[%FID]%&amp;apos;
  and b.repid(+) like &amp;apos;[%REPID]%&amp;apos;
order by a.id  </DATDSC><C4 >FORMULADS</C4><C5 >FORMULADS</C5></ROW>
</ROWSET>
</grddscds><fldhdr>
<ROWSET>
<ROW num="0" ><BILID >1单据编号</BILID><STAT >0单据状态</STAT><SUBTYP >0子类型</SUBTYP><CORPID >0往来单位编号</CORPID><CORPNAM >0往来单位名称</CORPNAM><LOCID >0仓库|部门编号</LOCID><LOCNAM >0仓库|部门名称</LOCNAM><DAT >0单据日期</DAT><CRTUSR >1录入人</CRTUSR><CRTUSRNAM >0录入人姓名</CRTUSRNAM><CRTDAT >0录入日期</CRTDAT><CHKUSR >1审核人</CHKUSR><CHKUSRNAM >0审核人姓名</CHKUSRNAM><CHKDAT >0审核日期</CHKDAT><SUMQTY >0合计金额</SUMQTY><SUMMNY >0合计金额</SUMMNY><REFID1 >0扩展字段</REFID1><REFNAM1 >0扩展字段</REFNAM1><REFID2 >0扩展字段</REFID2><REFNAM2 >0扩展字段</REFNAM2><REFID3 >0扩展字段</REFID3><REFNAM3 >0扩展字段</REFNAM3><REFID4 >0扩展字段</REFID4><REFNAM4 >0扩展字段</REFNAM4><REFID5 >0扩展字段</REFID5><REFNAM5 >0扩展字段</REFNAM5><REFID6 >0扩展字段</REFID6><REFNAM6 >0扩展字段</REFNAM6><NOTE >0备注</NOTE></ROW>
</ROWSET>
</fldhdr><flddtl>
<ROWSET>
<ROW num="0" ><SEQID >1明细序号</SEQID><ITMID >1品种编号</ITMID><ITMNAM >0品种名称</ITMNAM><ITEMPC >0品种批次号</ITEMPC><ITMSPC >0规格</ITMSPC><UNIT >0计量单位</UNIT><SMLUNT >0小计量单位</SMLUNT><UNTNUM >0大单位转小单位因子</UNTNUM><PRICE >0价格</PRICE><QTY >0数量</QTY><TAXTYP >0税率类型</TAXTYP><NOTAXMNY >0不含税税额</NOTAXMNY><TAXMNY >0税额</TAXMNY><MNY >0下单金额</MNY><REFID1 >0扩展字段</REFID1><REFNAM1 >0扩展字段</REFNAM1><REFID2 >0扩展字段</REFID2><REFNAM2 >0扩展字段</REFNAM2><REFID3 >0扩展字段</REFID3><REFNAM3 >0扩展字段</REFNAM3><REFID4 >0扩展字段</REFID4><REFNAM4 >0扩展字段</REFNAM4><REFID5 >0扩展字段</REFID5><REFNAM5 >0扩展字段</REFNAM5></ROW>
</ROWSET>
</flddtl></mdroot>