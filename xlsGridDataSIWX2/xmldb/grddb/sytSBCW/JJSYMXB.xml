<?xml version='1.0' encoding='GBK'?><mdroot><grdds>
<ROWSET>
<ROW num="0" ><MWTYP >R</MWTYP><MWID >JJSYMXB</MWID><NAME >基金收入明细表</NAME><NOTE ></NOTE><NOACCNAME ></NOACCNAME><FILE >JJSYMXB.zxg</FILE><SCENE ></SCENE><FIXED >5,1</FIXED><CATTYP ></CATTYP><DTLRNG ></DTLRNG><BATINP ></BATINP><MANUNIT ></MANUNIT><USESMLUNT ></USESMLUNT><ITEMTABLE ></ITEMTABLE><BILHDRTABLE ></BILHDRTABLE><BILDTLTABLE ></BILDTLTABLE><COLLIST ></COLLIST><WHERE ></WHERE><ORDER ></ORDER><DBNAME ></DBNAME><LISTSUM ></LISTSUM><LOADDATA ></LOADDATA><CHECKTITLE ></CHECKTITLE><IFBILL ></IFBILL><EXTJS ></EXTJS><JAVACLS ></JAVACLS><POST2MWID ></POST2MWID><LMS ></LMS><WIDTHMOD ></WIDTHMOD><HEIGHTMOD ></HEIGHTMOD><CLIENTCLASS ></CLIENTCLASS><SHOWBTN >0</SHOWBTN><CLOSEPAGES ></CLOSEPAGES><syt >SBCW</syt></ROW>
</ROWSET>
</grdds><grdcelds>
<ROWSET>
<ROW num="0" ><ID >1,-1,-1</ID><CELLID ></CELLID><NAME ></NAME><VALFLD ></VALFLD><DEFVAL ></DEFVAL><NOTNULL >0</NOTNULL><VALTYP ></VALTYP><MAXLEN ></MAXLEN><CTLTYP ></CTLTYP><LISTID ></LISTID><WHERE ></WHERE><ORDER ></ORDER><IFQUERY ></IFQUERY><IFQUERYSCOPE ></IFQUERYSCOPE><QUERTDEFVAL ></QUERTDEFVAL><FLD ></FLD></ROW>
</ROWSET>
</grdcelds><grdbtnds>
<ROWSET>
<ROW num="0" ><ID >clearKM</ID><NAME >清空科目</NAME><ACTTYP ></ACTTYP><URL ></URL><URLTARGET ></URLTARGET><TIP ></TIP><BTNORD ></BTNORD><IMG >1</IMG><IMGMOUSE >1</IMGMOUSE><C10 >clearKM</C10></ROW>
<ROW num="1" ><ID >PrintBB</ID><NAME >打印</NAME><ACTTYP ></ACTTYP><URL ></URL><URLTARGET ></URLTARGET><TIP ></TIP><BTNORD ></BTNORD><IMG >6</IMG><IMGMOUSE >6</IMGMOUSE><C10 >GRDBTNDS_1</C10></ROW>
</ROWSET>
</grdbtnds><grdpamds>
<ROWSET>
<ROW num="0" ><ID >DAT1</ID><NAME >起始日期</NAME><NOTNULL ></NOTNULL><KEYVAL >DAT</KEYVAL><INPCTL ></INPCTL><DISPORD ></DISPORD><SQLWHE ></SQLWHE><DEFVAL ></DEFVAL><TIP ></TIP><EDTFLG >1</EDTFLG><VISFLG >1</VISFLG><KEYFLG ></KEYFLG><C13 ></C13><C14 ></C14></ROW>
<ROW num="1" ><ID >DAT2</ID><NAME >截止日期</NAME><NOTNULL ></NOTNULL><KEYVAL >DAT</KEYVAL><INPCTL ></INPCTL><DISPORD ></DISPORD><SQLWHE ></SQLWHE><DEFVAL ></DEFVAL><TIP ></TIP><EDTFLG >1</EDTFLG><VISFLG >1</VISFLG><KEYFLG ></KEYFLG><C13 ></C13><C14 ></C14></ROW>
<ROW num="2" ><ID >KMBH</ID><NAME >科目</NAME><NOTNULL ></NOTNULL><KEYVAL >V_ACCITEM</KEYVAL><INPCTL >idlist</INPCTL><DISPORD ></DISPORD><SQLWHE >mjbz=1 and XJYHBZ&amp;lt;&amp;gt;0 and QLBZ&amp;lt;&amp;gt;1 and nvl(RJZKM_LRBZ,&amp;apos;1&amp;apos;) = &amp;apos;1&amp;apos;</SQLWHE><DEFVAL ></DEFVAL><TIP ></TIP><EDTFLG >1</EDTFLG><VISFLG >1</VISFLG><KEYFLG ></KEYFLG><C13 >KMBH</C13><C14 ></C14></ROW>
<ROW num="3" ><ID >ZTH</ID><NAME >帐套</NAME><NOTNULL ></NOTNULL><KEYVAL >V_ACC</KEYVAL><INPCTL >idlist</INPCTL><DISPORD ></DISPORD><SQLWHE ></SQLWHE><DEFVAL ></DEFVAL><TIP ></TIP><EDTFLG >1</EDTFLG><VISFLG >1</VISFLG><KEYFLG ></KEYFLG><C13 >ZTH</C13><C14 ></C14></ROW>
<ROW num="4" ><ID >MXXH</ID><NAME >明细</NAME><NOTNULL ></NOTNULL><KEYVAL ></KEYVAL><INPCTL ></INPCTL><DISPORD ></DISPORD><SQLWHE ></SQLWHE><DEFVAL ></DEFVAL><TIP ></TIP><EDTFLG >1</EDTFLG><VISFLG >1</VISFLG><KEYFLG ></KEYFLG><C13 >MX</C13><C14 ></C14></ROW>
<ROW num="5" ><ID >LXBH</ID><NAME >险种类型</NAME><NOTNULL ></NOTNULL><KEYVAL >V_CW_XZ</KEYVAL><INPCTL >list</INPCTL><DISPORD ></DISPORD><SQLWHE ></SQLWHE><DEFVAL ></DEFVAL><TIP ></TIP><EDTFLG >1</EDTFLG><VISFLG >1</VISFLG><KEYFLG ></KEYFLG><C13 >LXBH</C13><C14 >LXBH</C14></ROW>
</ROWSET>
</grdpamds><grdshwds>
<ROWSET>
<ROW num="0" ><ID >0,5,1</ID><NAME ></NAME><DBNAME ></DBNAME><DSKEY >DSC：MAIN</DSKEY><NROW >11</NROW><NCOL >24</NCOL><PAGES ></PAGES><PAGESIZE ></PAGESIZE><URL ></URL><CTLTYP ></CTLTYP><DYNCTL ></DYNCTL><LISTID ></LISTID><ISCROSS ></ISCROSS><HROW ></HROW><HCOLS ></HCOLS><ROWORDER ></ROWORDER><VCOLS ></VCOLS><VCOLSQL ></VCOLSQL><VALUECOL ></VALUECOL><C20 >0,5,1</C20></ROW>
</ROWSET>
</grdshwds><grdjsds>
<ROWSET>
<ROW num="0" ><GRDJSDS_VALUE >//20161130 lwq rewrite

var ZXGFILE0=&amp;quot;&amp;quot;;

var curr_pageno = 1; //当前页
var curr_maxpageno = 0; //最大分页数


//数据加载完毕
function _thisOnpost_loaddata(sheet)
{
	_this.SplitSheet(1,&amp;quot;V&amp;quot;,&amp;quot;10%&amp;quot;);
	ZXGFILE0 = _this.SaveTempZXGFile(sheet);
	_this.SetToDateBox(&amp;quot;&amp;quot;,1,1,2,G_LOGDAT);
	_this.SetToDateBox(&amp;quot;&amp;quot;,1,3,2,G_LOGDAT);
	_this.SetCellText(1,1,6,60);
	
	//科目		
	var kmList =_this.CreateListValueByXMLDS(_this.HttpCall(homeurl+&amp;quot;/XmlDB.sp?bind=V_ACCITEM&amp;where=mjbz=1 and XJYHBZ&amp;lt;&amp;gt;0 and QLBZ&amp;lt;&amp;gt;1 and nvl(RJZKM_LRBZ,&amp;apos;1&amp;apos;) = &amp;apos;1&amp;apos;&amp;quot;),&amp;quot;ID&amp;quot;,&amp;quot;NAME&amp;quot;);
	_this.SetToComboBox(&amp;quot;&amp;quot;,1,3,4,kmList);
	
	//险种类型
	var xzlxlList =_this.CreateListValueByXMLDS(_this.HttpCall(homeurl+&amp;quot;/XmlDB.sp?bind=V_CW_XZLX&amp;quot;),&amp;quot;ID&amp;quot;,&amp;quot;NAME&amp;quot;);
	_this.SetToComboBox(&amp;quot;&amp;quot;,1,1,4,xzlxlList);
	_this.SetCellText(1,1,4,&amp;quot;99&amp;quot;);
	
	loadData(1);	
}


//加载数据
function loadData(pageno)
{
	curr_pageno = pageno;
	
	_this.LoadZXGFile(ZXGFILE0,-1,0);
	_this.SetFixedRow(0,5);
	_this.SetMainCellRange(0,5,0,_this.GetRowCount(0)-2,_this.GetColCount(0)-2);
	_this.SetCellText(0,2,4,G_ORGNAM);
	_this.SetCellText(0,2,9,G_LOGDAT);
	
	var dat1 = _this.GetCellText(1,1,2); //开始日期
	var dat2 = _this.GetCellText(1,3,2); //截止日期
	var kmbh = _this.GetCellText(1,3,4); //科目
	var lxbh = _this.GetCellText(1,1,4); //险种类型ID
	var lxmc = _this.GetCellShowText(1,1,4); //险种类型NAME
	if (lxbh == &amp;quot;99&amp;quot;){
		lxbh = &amp;quot;&amp;quot;;
	}else{
		lxbh = &amp;quot; and lxbh = &amp;apos;&amp;quot;+lxbh+&amp;quot;&amp;apos; &amp;quot;;
	}
	_this.SetCellText(0,1,0,lxmc+&amp;quot;收入表&amp;quot;);
	
	var pagerows = _this.GetCellText(1,1,6); //分页每页总行数
		
	var param = &amp;quot;DAT1=&amp;quot;+dat1+&amp;quot;&amp;DAT2=&amp;quot;+dat2+&amp;quot;&amp;KMBH=&amp;quot;+kmbh+&amp;quot;&amp;LXBH=&amp;quot;+lxbh;
	param += &amp;quot;&amp;thissytid=&amp;quot;+G_SYTID+&amp;quot;&amp;thisgrdid=&amp;quot;+G_GRDID+&amp;quot;&amp;dsid=MAIN&amp;pageno=&amp;quot;+pageno+&amp;quot;&amp;pagerows=&amp;quot;+pagerows;
	//alert(param);	
	var xml = invokeOSFunc(&amp;quot;queryXml&amp;quot;,param);	
	_this.SetXmlDS(0,5,0,_this.GetRowCount(0)-2,_this.GetColCount(0)-2,xml);			
	_this.AutoFixColWidth(0,350);
	
	//获取总记录数
	var totalcnt = invokeOSFunc(&amp;quot;queryRowCount&amp;quot;,param); 
	
	//计算最大分页数
	curr_maxpageno = Math.ceil(totalcnt / pagerows);
	var rowsinfo = &amp;quot;  [ 共 &amp;quot;+totalcnt+&amp;quot; 行  第 &amp;quot; + pageno + &amp;quot;/&amp;quot; + curr_maxpageno + &amp;quot;页 每页 &amp;quot; + pagerows + &amp;quot; 行 ]&amp;quot;;
	_this.SetToolbarString(rowsinfo);
	_this.SetCellText(0,2,22,&amp;quot;第&amp;quot;+pageno+&amp;quot;页 共&amp;quot;+curr_maxpageno+&amp;quot;页&amp;quot;);
	
	_this.RefreshFormula();
	_this.AutoFixScreenWidth();

}

//鼠标左键点击
function _thisOnMouseLClick(sheet,row,col)
{
	if (sheet == 1) {
		if (row == 3 &amp;&amp; col == 10) { //查询 
			loadData(1);
		}
		else if (row == 1 &amp;&amp; col == 10) { //首页
			loadData(1);
		}
		else if (row == 1 &amp;&amp; col == 11) { //上一页
			var pageno = curr_pageno - 1;
			if (pageno &amp;lt;= 0) return;
			loadData(pageno);
		}
		else if (row == 1 &amp;&amp; col == 12) { //下一页
			var pageno = curr_pageno + 1;
			if (pageno &amp;gt; curr_maxpageno) return;		
			loadData(pageno);
		}
		else if (row == 1 &amp;&amp; col == 13) { //尾页
			loadData(curr_maxpageno);
		}
		
		else if (row == 3 &amp;&amp; col == 6) {//选择科目
			showKM();
		}

	}
}

//选择科目
function showKM()
{
	var obj = new Object();
        obj.filter = &amp;quot;xjyhbz &amp;lt;&amp;gt; 0&amp;quot;;
        obj.mjbz = &amp;quot;1&amp;quot;;
        obj.bz = &amp;quot;&amp;quot;;
        obj.jb = 0;
        obj.kmbh = &amp;quot;&amp;quot;;
	var retVal = window.showModalDialog(&amp;quot;show.sp?grdid=CW_KMSEL&amp;quot;,obj,&amp;quot;dialogWidth=600px;dialogHeight=500px&amp;quot;);
	var cur_kmbh = retVal;
	if (cur_kmbh != &amp;quot;&amp;quot; &amp;&amp; cur_kmbh != &amp;quot;undefined&amp;quot; &amp;&amp; cur_kmbh != undefined) {
		_this.SetCellText(1,3,4,cur_kmbh);
	}
}


//打印
function printBB()
{
	if (curr_maxpageno == 0) {
		alert(&amp;quot;没有数据，请先查询！&amp;quot;);
		return;
	}
	
	for (var i=1;i&amp;lt;=curr_maxpageno;i++) {
		loadData(i);
		_this.Print(0,1);
	}
}

//修改单元格内容
function _thisOnCellModify(sheet,row,col,oldvalue,newvalue)
{
	if (sheet == 1) {
		if (col == 2) {
			var dat1 = _this.GetCellText(1,1,2);
			var dat2 = _this.GetCellText(1,3,2);
			var dat11 = dat1.replace(/-/g,&amp;quot;&amp;quot;);
			var dat22 = dat2.replace(/-/g,&amp;quot;&amp;quot;);
			
			if (dat11 &amp;gt; dat22) {
				_this.SetCellText(1,3,2,dat1);
			}
				
		}
	}
}

//清空科目
function clearKM()
{
	_this.SetCellText(1,3,4,&amp;quot;%&amp;quot;);
}

//单元格焦点变动
function _thisOnCellFocusChange(sheet,rowold,colold,rownew,colnew)
{
	_thisOnCellModify(1,rowold,colold,&amp;quot;&amp;quot;,&amp;quot;&amp;quot;);
}

//下拉列表框选择改变
function _thisOnListSelChange(id, oldsel, cursel)
{
	loadData(1);
}
</GRDJSDS_VALUE></ROW>
</ROWSET>
</grdjsds><grdosds>
<ROWSET>
<ROW num="0" ><GRDOSDS_VALUE >var pub = new JavaPackage(&amp;quot;com.xlsgrid.net.pub&amp;quot;);
var servletpack = new JavaPackage(&amp;quot;com.xlsgrid.net.servlet&amp;quot;);

//分页查询
function queryXml()
{
	var db = null;
	try {
		db = new pub.EADatabase();
		var mwsql = new servletpack.MWSQL();
		var sql = mwsql.GetQuerySQL(request,db,thissytid ,thisgrdid ,dsid);
		sql = pub.EAFunc.Replace(sql,&amp;quot;[%DAT1]&amp;quot;,DAT1);
		sql = pub.EAFunc.Replace(sql,&amp;quot;[%DAT2]&amp;quot;,DAT2);
		sql = pub.EAFunc.Replace(sql,&amp;quot;[%KMBH]&amp;quot;,KMBH);
		sql = pub.EAFunc.Replace(sql,&amp;quot;[%LXBH]&amp;quot;,LXBH);

		sql = &amp;quot;select * from ( &amp;quot; + sql + &amp;quot; ) where rn&amp;gt;(&amp;quot;+pageno+&amp;quot;-1)*&amp;quot;+pagerows+&amp;quot; and rn&amp;lt;=&amp;quot;+pageno+&amp;quot;*&amp;quot;+pagerows;
		//throw new Exception(sql);

		var ds = db.QuerySQL(sql);
		return ds.GetXml();
		
	}
	catch(e) {
		if (db != null) db.Rollback();
		return e.toString();
	}
	finally {
		if (db != null) db.Close();
	}
}


//分页取总行数~总金额
function queryRowCount()
{	
	var db = null;
	try {
		db = new pub.EADatabase();
		var mwsql = new servletpack.MWSQL();
		var sql = mwsql.GetQuerySQL(request,db,thissytid ,thisgrdid ,dsid);
		sql = pub.EAFunc.Replace(sql,&amp;quot;[%DAT1]&amp;quot;,DAT1);
		sql = pub.EAFunc.Replace(sql,&amp;quot;[%DAT2]&amp;quot;,DAT2);
		sql = pub.EAFunc.Replace(sql,&amp;quot;[%KMBH]&amp;quot;,KMBH);
		sql = pub.EAFunc.Replace(sql,&amp;quot;[%LXBH]&amp;quot;,LXBH);
		
		//var cnt = db.GetSQLRowCount(sql);
		
		sql = &amp;quot;select count(*) cnt from ( &amp;quot; + sql + &amp;quot; )&amp;quot;;
		var ds = db.QuerySQL(sql);
		var cnt = ds.getStringAt(0,&amp;quot;CNT&amp;quot;);
		//var summny = ds.getStringAt(0,&amp;quot;SUMMNY&amp;quot;);
		//return cnt+&amp;quot;~&amp;quot;+summny;
		return cnt;
	}
	catch(e) {
		if (db != null) db.Rollback();
		return e.toString();
	}
	finally {
		if (db != null) db.Close();
	}
}


</GRDOSDS_VALUE></ROW>
</ROWSET>
</grdosds><grddscds>
<ROWSET>
<ROW num="0" ><ID >MAIN</ID><NAME ></NAME><DATDSC >select rownum rn,t.* from (
select yy,
       mm,
       dd,
       pzh,
       djh,
       upper(ltrim(rtrim(dwbh))) dwbh,
       (select dwmc from si_dwb b where a.dwbh=b.dwbh and a.sbh=b.sbh and a.zth=b.zth) dwmc,
       zy,
       sum(decode(lxxh,
                  1,
                  decode(mx_jefx, &amp;apos;借&amp;apos;, nvl(mx_je, 0), -1 * nvl(mx_je, 0)),
                  0)) dw_bqsj,
       sum(decode(lxxh,
                  2,
                  decode(mx_jefx, &amp;apos;借&amp;apos;, nvl(mx_je, 0), -1 * nvl(mx_je, 0)),
                  0)) dw_yj,
       sum(decode(lxxh,
                  3,
                  decode(mx_jefx, &amp;apos;借&amp;apos;, nvl(mx_je, 0), -1 * nvl(mx_je, 0)),
                  0)) dw_bj,
       sum(decode(lxxh,
                  4,
                  decode(mx_jefx, &amp;apos;借&amp;apos;, nvl(mx_je, 0), -1 * nvl(mx_je, 0)),
                  0)) dw_qq,
       sum(decode(lxxh,
                  5,
                  decode(mx_jefx, &amp;apos;借&amp;apos;, nvl(mx_je, 0), -1 * nvl(mx_je, 0)),
                  0)) dw_qt,
       sum(decode(lxxh,
                  6,
                  decode(mx_jefx, &amp;apos;借&amp;apos;, nvl(mx_je, 0), -1 * nvl(mx_je, 0)),
                  0)) gr_bqsj,
       sum(decode(lxxh,
                  7,
                  decode(mx_jefx, &amp;apos;借&amp;apos;, nvl(mx_je, 0), -1 * nvl(mx_je, 0)),
                  0)) gr_yj,
       sum(decode(lxxh,
                  8,
                  decode(mx_jefx, &amp;apos;借&amp;apos;, nvl(mx_je, 0), -1 * nvl(mx_je, 0)),
                  0)) gr_bj,
       sum(decode(lxxh,
                  9,
                  decode(mx_jefx, &amp;apos;借&amp;apos;, nvl(mx_je, 0), -1 * nvl(mx_je, 0)),
                  0)) gr_qq,
       sum(decode(lxxh,
                  10,
                  decode(mx_jefx, &amp;apos;借&amp;apos;, nvl(mx_je, 0), -1 * nvl(mx_je, 0)),
                  0)) gr_qt,
       sum(decode(lxxh,
                  11,
                  decode(mx_jefx, &amp;apos;借&amp;apos;, nvl(mx_je, 0), -1 * nvl(mx_je, 0)),
                  0)) dw_bjlx,
       sum(decode(lxxh,
                  12,
                  decode(mx_jefx, &amp;apos;借&amp;apos;, nvl(mx_je, 0), -1 * nvl(mx_je, 0)),
                  0)) dw_qqlx,
       sum(decode(lxxh,
                  13,
                  decode(mx_jefx, &amp;apos;借&amp;apos;, nvl(mx_je, 0), -1 * nvl(mx_je, 0)),
                  0)) gr_bjlx,
       sum(decode(lxxh,
                  14,
                  decode(mx_jefx, &amp;apos;借&amp;apos;, nvl(mx_je, 0), -1 * nvl(mx_je, 0)),
                  0)) gr_qqlx,
       sum(decode(lxxh,
                  15,
                  decode(mx_jefx, &amp;apos;借&amp;apos;, nvl(mx_je, 0), -1 * nvl(mx_je, 0)),
                  0)) gr_znj
  from cw_rjzb_view a
 where ORG=&amp;apos;[%SYS_ORGID]&amp;apos; AND ACC=&amp;apos;[%SYS_ACCID]&amp;apos; 
   AND YY||&amp;apos;-&amp;apos;||triM(to_char(MM,&amp;apos;00&amp;apos;))||&amp;apos;-&amp;apos;||triM(to_char(dd,&amp;apos;00&amp;apos;)) &amp;gt;= &amp;apos;[%DAT1]&amp;apos; 
   and YY||&amp;apos;-&amp;apos;||triM(to_char(MM,&amp;apos;00&amp;apos;))||&amp;apos;-&amp;apos;||triM(to_char(dd,&amp;apos;00&amp;apos;)) &amp;lt;= &amp;apos;[%DAT2]&amp;apos;
   and dwbh is not null
   and kmbh is not null
   [%LXBH]
   --and mxxh like &amp;apos;[%MXXH]%&amp;apos;
   and kmbh = decode(&amp;apos;[%KMBH]&amp;apos;, &amp;apos;&amp;apos;, KMBH, &amp;apos;[%KMBH]&amp;apos;)
 group by sbh, zth, yy, mm, dd, dwbh, djh, zy, pzh
 order BY yy, mm, dd, DWBH
 ) t</DATDSC><C4 >MAIN</C4><C5 >MAIN</C5><C6 >MAIN</C6><C7 >MAIN</C7><C8 >MAIN</C8></ROW>
</ROWSET>
</grddscds><fldhdr>
<ROWSET>
<ROW num="0" ><BILID >1单据编号</BILID><STAT >0单据状态</STAT><SUBTYP >0子类型</SUBTYP><CORPID >0往来单位编号</CORPID><CORPNAM >0往来单位名称</CORPNAM><LOCID >0仓库|部门编号</LOCID><LOCNAM >0仓库|部门名称</LOCNAM><DAT >0单据日期</DAT><CRTUSR >1录入人</CRTUSR><CRTUSRNAM >0录入人姓名</CRTUSRNAM><CRTDAT >0录入日期</CRTDAT><CHKUSR >1审核人</CHKUSR><CHKUSRNAM >0审核人姓名</CHKUSRNAM><CHKDAT >0审核日期</CHKDAT><SUMQTY >0合计金额</SUMQTY><SUMMNY >0合计金额</SUMMNY><REFID1 >0扩展字段</REFID1><REFNAM1 >0扩展字段</REFNAM1><REFID2 >0扩展字段</REFID2><REFNAM2 >0扩展字段</REFNAM2><REFID3 >0扩展字段</REFID3><REFNAM3 >0扩展字段</REFNAM3><REFID4 >0扩展字段</REFID4><REFNAM4 >0扩展字段</REFNAM4><REFID5 >0扩展字段</REFID5><REFNAM5 >0扩展字段</REFNAM5><REFID6 >0扩展字段</REFID6><REFNAM6 >0扩展字段</REFNAM6><NOTE >0备注</NOTE></ROW>
</ROWSET>
</fldhdr><flddtl>
<ROWSET>
<ROW num="0" ><SEQID >1明细序号</SEQID><ITMID >1品种编号</ITMID><ITMNAM >0品种名称</ITMNAM><ITEMPC >0品种批次号</ITEMPC><ITMSPC >0规格</ITMSPC><UNIT >0计量单位</UNIT><SMLUNT >0小计量单位</SMLUNT><UNTNUM >0大单位转小单位因子</UNTNUM><PRICE >0价格</PRICE><QTY >0数量</QTY><TAXTYP >0税率类型</TAXTYP><NOTAXMNY >0不含税税额</NOTAXMNY><TAXMNY >0税额</TAXMNY><MNY >0下单金额</MNY><REFID1 >0扩展字段</REFID1><REFNAM1 >0扩展字段</REFNAM1><REFID2 >0扩展字段</REFID2><REFNAM2 >0扩展字段</REFNAM2><REFID3 >0扩展字段</REFID3><REFNAM3 >0扩展字段</REFNAM3><REFID4 >0扩展字段</REFID4><REFNAM4 >0扩展字段</REFNAM4><REFID5 >0扩展字段</REFID5><REFNAM5 >0扩展字段</REFNAM5></ROW>
</ROWSET>
</flddtl></mdroot>