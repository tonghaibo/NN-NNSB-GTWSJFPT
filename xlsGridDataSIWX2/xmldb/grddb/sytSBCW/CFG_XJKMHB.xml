<?xml version='1.0' encoding='GBK'?><mdroot><grdds>
<ROWSET>
<ROW num="0" ><MWTYP >M</MWTYP><MWID >CFG_XJKMHB</MWID><NAME >下级科目合并</NAME><NOTE ></NOTE><NOACCNAME ></NOACCNAME><FILE >CFG_XJKMHB.zxg</FILE><SCENE ></SCENE><FIXED ></FIXED><CATTYP >系统维护</CATTYP><DTLRNG ></DTLRNG><BATINP ></BATINP><MANUNIT ></MANUNIT><USESMLUNT ></USESMLUNT><ITEMTABLE ></ITEMTABLE><BILHDRTABLE ></BILHDRTABLE><BILDTLTABLE ></BILDTLTABLE><COLLIST ></COLLIST><WHERE ></WHERE><ORDER ></ORDER><DBNAME ></DBNAME><LISTSUM ></LISTSUM><LOADDATA ></LOADDATA><CHECKTITLE ></CHECKTITLE><IFBILL ></IFBILL><EXTJS ></EXTJS><JAVACLS ></JAVACLS><POST2MWID ></POST2MWID><LMS ></LMS><WIDTHMOD >1</WIDTHMOD><HEIGHTMOD ></HEIGHTMOD><CLIENTCLASS ></CLIENTCLASS><SHOWBTN ></SHOWBTN><CLOSEPAGES ></CLOSEPAGES><syt >SBCW</syt></ROW>
</ROWSET>
</grdds><grdjsds>
<ROWSET>
<ROW num="0" ><GRDJSDS_VALUE >var ZXGFILE0 = &amp;quot;&amp;quot;;
var ZXGFILE1 = &amp;quot;&amp;quot;;

//数据加载完毕
function _thisOnpost_loaddata(sheet){
	initLayout();
	ZXGFILE0 = _this.SaveTempZXGFile(0); 
	ZXGFILE1 = _this.SaveTempZXGFile(1); 
	_this.SetCellText(0,4,2,kmbh);
	_this.SetCellText(0,4,4,kmmc);
	
	loadData();
	
	_this.ShowToolBar(0);
}

//页面布局初始化
function initLayout()
{
	_this.SplitSheet(0,&amp;quot;V&amp;quot;,95);//设置页面布局，“V” 为纵向，“H”为横向
	_this.SplitSheet(1,&amp;quot;V&amp;quot;,180);
	
	ZXGFILE0 = _this.SaveTempZXGFile(0); //把某一页的东西存放到临时文件，返回存放的路径
	ZXGFILE1 = _this.SaveTempZXGFile(1);

	_this.SetAttribe(&amp;quot;SHEET_0&amp;quot;,_this.ATTR_SHEET_SELECTFLAG,_this. SELECTFLAG_SINGLEROW );
	_this.SetAttribe(&amp;quot;SHEET_1&amp;quot;,_this.ATTR_SHEET_SELECTFLAG,_this. SELECTFLAG_SINGLEROW );	
}

//载入科目数据
function loadData()
{
	_this.LoadZXGFile(ZXGFILE1,-1,1);

	_this.SetFixedRow(1,1);//设置sheet_hpmx 页的第一行为固定行，不可滚动
	_this.SetMainCellRange(1,1,0,_this.GetRowCount(1)-2,_this.GetColCount(1)-1);
	var xml = _sql.query(&amp;quot;XJLB&amp;quot;,&amp;quot;kmbh=&amp;quot;+kmbh);
	_this.SetXmlDS(1 ,1,2,_this.GetRowCount(1 )-2,_this.GetColCount(1)-1,xml);//GetRowCount()取某页的总行数 GetColCount()取某页的总列数
	
//	var sumrow = _this.XMLDS_GetRowCount(); //查看XMLDS的行数
//	var midrow = Math.ceil(sumrow / 2);	
//	var row1 = _this.GetMainCellRangeRow1(0);//左上角行
//	var row2 = _this.GetMainCellRangeRow2(0);//右下角行	
//	for (var i=1;i&amp;lt;=midrow;i++) {
//		n ++;
//		if (n &amp;gt; row2) {
//			_this.AppendRow(1,n-1);//追加行号
//		}
//		_this.SetCellText(1,row1,2,_this.XMLDS_GetString(i,&amp;quot;kmbh&amp;quot;));
//		_this.SetCellText(1,row1,3,_this.XMLDS_GetString(i,&amp;quot;hmmc&amp;quot;));
//	}
}


//点击按钮
function _thisOnButtonCtrlClick(id,sheet,row,col){
	if(id==&amp;quot;开始&amp;quot;){
		var kmbh_xj = _this.GetCellText(1,1,2);
		try{
			var param = new Object();
			param.sbh = G_ORGID;
			param.zth = G_ACCID.replace(G_ORGID,&amp;quot;&amp;quot;);
			param.org = G_ORGID;
			param.acc = G_ACCID;
			param.kmbh = kmbh;
			
			var ret = invokeOSFuncExt(&amp;quot;xjkmhb&amp;quot;,param);
//			alert(ret);
			if(ret == 1){
				alert(&amp;quot;合并完成&amp;quot;);
				window.returnValue = 1;
				window.close();
			}else{				
				alert(&amp;quot;合并失败&amp;quot;);
				return false;
			}			
		}catch(e){
			alert(e.toString());
		}
	}else if(id == &amp;quot;退出&amp;quot;){
		window.close();
	}

}</GRDJSDS_VALUE></ROW>
</ROWSET>
</grdjsds><grdosds>
<ROWSET>
<ROW num="0" ><GRDOSDS_VALUE >var pub = new JavaPackage(&amp;quot;com.xlsgrid.net.pub&amp;quot;);
var xmldb = new JavaPackage(&amp;quot;com.xlsgrid.net.xmldb&amp;quot;);
var web = new JavaPackage(&amp;quot;com.xlsgrid.net.web&amp;quot;);

function xjkmhb()
{
	var db = null;
	var ps = null;
	var sql = &amp;quot;&amp;quot;;  
	var ccxx = &amp;quot;&amp;quot;;
	var retVal = 1;
	var ccxxcd = 0;
	var errlen = &amp;quot;&amp;quot;;
	var errtext = &amp;quot;&amp;quot;;
	
	try {
		db = new pub.EADatabase();
		var conn = db.GetConn();
		//获取执行环境
		var statement = conn.createStatement();
		
		sql = &amp;quot;SELECT KMBH kmbh, KMLX, SLH, JB, MJBZ FROM CW_KMB WHERE sbh = &amp;apos;&amp;quot;+sbh+&amp;quot;&amp;apos; and zth = &amp;apos;&amp;quot;+zth+&amp;quot;&amp;apos;AND SLH LIKE &amp;apos;&amp;quot;+kmbh+&amp;quot;%&amp;apos; ORDER BY KMBH&amp;quot;;
		var ds = db.QuerySQL(sql);
//		return ds.getRowCount();
		for(var db_r = 0;db_r &amp;lt; ds.getRowCount();db_r++){
			var kmbh_xj = ds.getStringAt(db_r,&amp;quot;kmbh&amp;quot;);
			
			//调用后台函数	
			var errlen = 4096;
			var praFunc = conn.prepareCall(&amp;quot;{?=call cw_pack.check_move_kmbh(?,?,?,?,?,?,?)}&amp;quot;);
			praFunc.registerOutParameter(1,java.sql.Types.INTEGER);
			praFunc.setString(2,sbh);
			praFunc.setString(3,zth);
			praFunc.setString(4,kmbh_xj);
			praFunc.setString(5,kmbh);
			praFunc.setString(6,&amp;quot;jion&amp;quot;);
			praFunc.registerOutParameter(7,java.sql.Types.VARCHAR);
			praFunc.setInt(8,errlen);
		
			praFunc.executeUpdate();
			
			retVal = praFunc.getString(1);
			ccxx = praFunc.getString(7);
		}
		if(retVal &amp;lt; 1){
			return ccxx;
		}
		
		var sql1 = &amp;quot;delete from cw_kmb where sbh = &amp;apos;&amp;quot;+sbh+&amp;quot;&amp;apos; and zth = &amp;apos;&amp;quot;+zth+&amp;quot;&amp;apos; and org = &amp;apos;&amp;quot;+org+&amp;quot;&amp;apos; and acc=&amp;apos;&amp;quot;+acc+&amp;quot;&amp;apos; and slh = &amp;apos;&amp;quot;+kmbh+&amp;quot;&amp;apos;&amp;quot;;
		ps = db.prepareStatement(sql1); //初始化
		ps.execute(); //执行SQL语句
		
		var sql2 = &amp;quot;update cw_kmb set mjbz = 1 where kmbh = &amp;apos;&amp;quot;+kmbh+&amp;quot;&amp;apos; and sbh = &amp;apos;&amp;quot;+sbh+&amp;quot;&amp;apos; and zth = &amp;apos;&amp;quot;+zth+&amp;quot;&amp;apos; and org = &amp;apos;&amp;quot;+org+&amp;quot;&amp;apos; and acc=&amp;apos;&amp;quot;+acc+&amp;quot;&amp;apos;&amp;quot;;
		ps = db.prepareStatement(sql2); //初始化
		ps.execute(); //执行SQL语句

		db.Commit();
		return 1;
	}
	catch(e) {
		if (db != null) db.Rollback();
		return e.toString();
	}
	finally {
		if (db != null) db.Close();
	}

}</GRDOSDS_VALUE></ROW>
</ROWSET>
</grdosds><grddscds>
<ROWSET>
<ROW num="0" ><ID >XJLB</ID><NAME >当前子科目列表</NAME><DATDSC >select kmbh kmbh,kmmc kmmc 
from cw_kmb 
where org=&amp;apos;[%SYS_ORGID]&amp;apos; and acc=&amp;apos;[%SYS_ACCID]&amp;apos; and slh = &amp;apos;[%kmbh]&amp;apos;</DATDSC></ROW>
</ROWSET>
</grddscds><fldhdr>
<ROWSET>
<ROW num="0" ><BILID >1单据编号</BILID><STAT >0单据状态</STAT><SUBTYP >0子类型</SUBTYP><CORPID >0往来单位编号</CORPID><CORPNAM >0往来单位名称</CORPNAM><LOCID >0仓库|部门编号</LOCID><LOCNAM >0仓库|部门名称</LOCNAM><DAT >0单据日期</DAT><CRTUSR >1录入人</CRTUSR><CRTUSRNAM >0录入人姓名</CRTUSRNAM><CRTDAT >0录入日期</CRTDAT><CHKUSR >1审核人</CHKUSR><CHKUSRNAM >0审核人姓名</CHKUSRNAM><CHKDAT >0审核日期</CHKDAT><SUMQTY >0合计金额</SUMQTY><SUMMNY >0合计金额</SUMMNY><REFID1 >0扩展字段</REFID1><REFNAM1 >0扩展字段</REFNAM1><REFID2 >0扩展字段</REFID2><REFNAM2 >0扩展字段</REFNAM2><REFID3 >0扩展字段</REFID3><REFNAM3 >0扩展字段</REFNAM3><REFID4 >0扩展字段</REFID4><REFNAM4 >0扩展字段</REFNAM4><REFID5 >0扩展字段</REFID5><REFNAM5 >0扩展字段</REFNAM5><REFID6 >0扩展字段</REFID6><REFNAM6 >0扩展字段</REFNAM6><NOTE >0备注</NOTE></ROW>
</ROWSET>
</fldhdr><flddtl>
<ROWSET>
<ROW num="0" ><SEQID >1明细序号</SEQID><ITMID >1品种编号</ITMID><ITMNAM >0品种名称</ITMNAM><ITEMPC >0品种批次号</ITEMPC><ITMSPC >0规格</ITMSPC><UNIT >0计量单位</UNIT><SMLUNT >0小计量单位</SMLUNT><UNTNUM >0大单位转小单位因子</UNTNUM><PRICE >0价格</PRICE><QTY >0数量</QTY><TAXTYP >0税率类型</TAXTYP><NOTAXMNY >0不含税税额</NOTAXMNY><TAXMNY >0税额</TAXMNY><MNY >0下单金额</MNY><REFID1 >0扩展字段</REFID1><REFNAM1 >0扩展字段</REFNAM1><REFID2 >0扩展字段</REFID2><REFNAM2 >0扩展字段</REFNAM2><REFID3 >0扩展字段</REFID3><REFNAM3 >0扩展字段</REFNAM3><REFID4 >0扩展字段</REFID4><REFNAM4 >0扩展字段</REFNAM4><REFID5 >0扩展字段</REFID5><REFNAM5 >0扩展字段</REFNAM5></ROW>
</ROWSET>
</flddtl></mdroot>