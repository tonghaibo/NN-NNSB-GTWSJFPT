<?xml version='1.0' encoding='GBK'?><mdroot><grdds>
<ROWSET>
<ROW num="0" ><MWTYP >R</MWTYP><MWID >REPPRINT</MWID><NAME >报表打印</NAME><NOTE ></NOTE><NOACCNAME ></NOACCNAME><FILE >REPPRINT.zxg</FILE><SCENE ></SCENE><FIXED ></FIXED><CATTYP ></CATTYP><DTLRNG ></DTLRNG><BATINP ></BATINP><MANUNIT ></MANUNIT><USESMLUNT ></USESMLUNT><ITEMTABLE ></ITEMTABLE><BILHDRTABLE ></BILHDRTABLE><BILDTLTABLE ></BILDTLTABLE><COLLIST ></COLLIST><WHERE ></WHERE><ORDER ></ORDER><DBNAME ></DBNAME><LISTSUM ></LISTSUM><LOADDATA ></LOADDATA><CHECKTITLE ></CHECKTITLE><IFBILL ></IFBILL><EXTJS ></EXTJS><JAVACLS ></JAVACLS><POST2MWID ></POST2MWID><LMS ></LMS><WIDTHMOD >1</WIDTHMOD><HEIGHTMOD ></HEIGHTMOD><CLIENTCLASS ></CLIENTCLASS><SHOWBTN >0</SHOWBTN><CLOSEPAGES ></CLOSEPAGES><syt >SBCW</syt></ROW>
</ROWSET>
</grdds><grdbtnds>
<ROWSET>
<ROW num="0" ><ID >startPrint</ID><NAME >打印</NAME><ACTTYP ></ACTTYP><URL ></URL><URLTARGET ></URLTARGET><TIP ></TIP><BTNORD ></BTNORD><IMG >6</IMG><IMGMOUSE >6</IMGMOUSE><C10 ></C10><C11 ></C11><C12 ></C12><C13 >startCheck</C13><C14 >startPrint</C14><C15 ></C15></ROW>
</ROWSET>
</grdbtnds><grdjsds>
<ROWSET>
<ROW num="0" ><GRDJSDS_VALUE >////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//打印设置说明：
//本机第一次打印前，需要对每张报表设置好打印机：先双击打开报表，在开始菜单-&amp;gt;打印设置-&amp;gt;设置当前页面打印机选项中，
//设置打印以及打印纸张大小和打印方向等参数。该设置需要对所有报表设置一次，这样连续打印就不会再弹出提示选择打印
//机的窗口。
////////////////////////////////////////////////////////////////////////////////////////////////////////////////

var cursel_orgid = &amp;quot;&amp;quot;;
var cursel_accid = &amp;quot;&amp;quot;; //当前选择的帐套号
var cursel_replocid = &amp;quot;&amp;quot;; //当前选择的报表位置
var subtypList;
var yyList;
var accList;
var replocList;
var printList;
var yymmList;

var ZXGFILE1 = &amp;quot;&amp;quot;;
var ZXGFILE2 = &amp;quot;&amp;quot;;

var zTree;
// zTree 的参数配置，深入使用请参考 API 文档（setting 配置详解）
var setting = {
	data: {
		simpleData: {
			enable: true
		}
	},
	callback: {
		onClick: zTreeOnClick
	}
};

// zTree 的数据属性，深入使用请参考 API 文档（zTreeNode 节点数据详解）
//var zNodes = [
//   {name:&amp;quot;test1&amp;quot;, open:true, children:[
//      {name:&amp;quot;test1_1&amp;quot;,orgid:&amp;quot;1&amp;quot;,accid:&amp;quot;21&amp;quot;}, {name:&amp;quot;test1_2&amp;quot;,orgid:&amp;quot;1&amp;quot;,accid:&amp;quot;21&amp;quot;}]},
//   {name:&amp;quot;test2&amp;quot;, open:true, children:[
//      {name:&amp;quot;test2_1&amp;quot;,orgid:&amp;quot;1&amp;quot;,accid:&amp;quot;21&amp;quot;}, {name:&amp;quot;test2_2&amp;quot;,orgid:&amp;quot;1&amp;quot;,accid:&amp;quot;21&amp;quot;}]}
//   ];

$(document).ready(function(){
      var zNodes = eval(getReplocNodes());
      zTree = $.fn.zTree.init($(&amp;quot;#treeReploc&amp;quot;), setting, zNodes);
      
      //var node = zTree.getNodeByTId(&amp;quot;treeReploc_0012121&amp;quot;);
//      var node = zTree.getNodeByParam(&amp;quot;id&amp;quot;,&amp;quot;00121&amp;quot;);
//      zTree.expandNode(node,true,true,true);
      //zTree.expandAll(true);
//zTree.selectNode(zTree.getNodeByParam(&amp;quot;id&amp;quot;,&amp;quot;0012121&amp;quot;));
                
});

//点击树节点事件
function zTreeOnClick(event, treeId, treeNode) 
{
	//alert(treeNode.tId + &amp;quot;, &amp;quot; + treeNode.name+&amp;quot;,orgid=&amp;quot;+treeNode.orgid+&amp;quot;,accid=&amp;quot;+treeNode.accid);
    	var typ = treeNode.typ;
	var orgid = treeNode.orgid;
	var accid = treeNode.accid;
	var replocid = treeNode.replocid;
	
	cursel_orgid = orgid;
	cursel_replocid = replocid;
	
	if (typ == &amp;quot;ACC&amp;quot;) {
		cursel_accid = accid;
		var yymm = _this.GetCellText(1,1,2);
		loadReport(yymm,cursel_orgid,accid,cursel_replocid);
	}

};

//获取报表位置节点数据
function getReplocNodes()
{
	var nodes = invokeOSFunc(&amp;quot;GetReplocTree&amp;quot;,&amp;quot;thisorgid=&amp;quot;+G_ORGID+&amp;quot;&amp;thisaccid=&amp;quot;+G_ACCID);
	return nodes;
}

//数据加载完毕
function _thisOnpost_loaddata(sheet)
{
	_this.SplitSheet(0,&amp;quot;H&amp;quot;,&amp;quot;0%&amp;quot;);
	
//	var treexml = &amp;quot;&amp;lt;报表位置 imageid=\&amp;quot;0\&amp;quot;&amp;gt;&amp;quot;
//		+ GetOrgList()
//       		+ &amp;quot;&amp;lt;/报表位置&amp;gt;&amp;quot;;
//	
//	_this.SetToTreeCtrl(&amp;quot;Tree_1&amp;quot;,0,-1,-1,treexml);
//	_this.ExpandAllItem(&amp;quot;Tree_1&amp;quot;);
	_this.SetToolbarString(&amp;quot;提示：第一次打印前请先双击打开预览报表，在预览报表上设置好打印参数。&amp;quot;);
	
	//_this.SetToSelectBox(&amp;quot;&amp;quot;,1,1,2,&amp;quot;V_YYYY_MM&amp;quot;,&amp;quot;&amp;quot;);
	_this.SetCellText(1,1,2,G_LOGDAT.substring(0,7));
	var yymm = _this.GetCellText(1,1,2);
	_sql.querytods(&amp;quot;ZTQDYM&amp;quot;,&amp;quot;&amp;quot;);
	var qdym = _this.XMLDS_GetString(0,&amp;quot;QDYM&amp;quot;);
	yymmList =_this.CreateListValueByXMLDS(_this.HttpCall(homeurl+&amp;quot;/XmlDB.sp?bind=V_YYYY_MM&amp;where=id&amp;gt;=&amp;apos;&amp;quot;+qdym+&amp;quot;&amp;apos;&amp;quot;),&amp;quot;ID&amp;quot;,&amp;quot;NAME&amp;quot;);	
	accList = _this.CreateListValueByXMLDS(_this.HttpCall(homeurl+&amp;quot;/XmlDB.sp?bind=ACC&amp;quot;),&amp;quot;ID&amp;quot;,&amp;quot;NAME&amp;quot;);

	cursel_orgid = G_ORGID;
	cursel_accid = G_ACCID;
	
	_sql.querytods(&amp;quot;REPLOC&amp;quot;,&amp;quot;&amp;quot;);	
	if (_this.XMLDS_GetRowCount() &amp;gt; 0) {
		cursel_replocid = _this.XMLDS_GetString(0,&amp;quot;BMBH&amp;quot;);
	}
	else {
		_sql.querytods(&amp;quot;REPLOC2&amp;quot;,&amp;quot;&amp;quot;);
		cursel_replocid = _this.XMLDS_GetString(0,&amp;quot;BMBH&amp;quot;);
	}
	_this.SetCellText(1,0,2,cursel_replocid);
	
	zTree.selectNode(zTree.getNodeByParam(&amp;quot;id&amp;quot;,cursel_replocid));
	
	printList = _this.CreateListValue();
	_this.SetListValue(printList,&amp;quot;1&amp;quot;,&amp;quot;1&amp;quot;);
	_this.SetListValue(printList,&amp;quot;2&amp;quot;,&amp;quot;2&amp;quot;);
	_this.SetListValue(printList,&amp;quot;3&amp;quot;,&amp;quot;3&amp;quot;);
	_this.SetListValue(printList,&amp;quot;4&amp;quot;,&amp;quot;4&amp;quot;);
	_this.SetListValue(printList,&amp;quot;5&amp;quot;,&amp;quot;5&amp;quot;);
	_this.SetListValue(printList,&amp;quot;6&amp;quot;,&amp;quot;6&amp;quot;);
	_this.SetListValue(printList,&amp;quot;7&amp;quot;,&amp;quot;7&amp;quot;);
	_this.SetListValue(printList,&amp;quot;8&amp;quot;,&amp;quot;8&amp;quot;);
	_this.SetListValue(printList,&amp;quot;9&amp;quot;,&amp;quot;9&amp;quot;);
	_this.SetListValue(printList,&amp;quot;10&amp;quot;,&amp;quot;10&amp;quot;);
	_this.SetToComboBox(&amp;quot;&amp;quot;,1,2,2,printList);
	
	ZXGFILE1 = _this.SaveTempZXGFile(1);
	
	loadReport(yymm,G_ORGID,G_ACCID,cursel_replocid);
	
}

function GetOrgList()
{
	var orgxml = invokeOSFunc(&amp;quot;GetReportTree&amp;quot;,&amp;quot;thisorgid=&amp;quot;+G_ORGID);
	return orgxml;
}


function _thisOnTreeItemClick(id, hItem, tagid, attribe, value)
{
	var typ = getXmlAttribute(attribe,&amp;quot;typ&amp;quot;);
	var orgid = getXmlAttribute(attribe,&amp;quot;orgid&amp;quot;);
	var accid = getXmlAttribute(attribe,&amp;quot;accid&amp;quot;);
	var replocid = getXmlAttribute(attribe,&amp;quot;replocid&amp;quot;);
	cursel_orgid = orgid;
	cursel_replocid = replocid;
	
	try {var nextlevel_itemid=_this.XMLCTL_GetItem(id,hItem,2);if(nextlevel_itemid!=&amp;quot;&amp;quot;)return;} catch ( e ){  return;}//说明该节点已经有数据
     

	if (typ == &amp;quot;ORG&amp;quot;) {
		var accxml = invokeOSFunc(&amp;quot;GetAccList&amp;quot;,&amp;quot;thisorgid=&amp;quot;+orgid);
		_this.XMLCTL_Append(id,accxml,hItem,2);
	}
	else if (typ == &amp;quot;ACC&amp;quot;) {
		cursel_accid = accid;
		var yymm = _this.GetCellText(1,1,2);
		loadReport(yymm,cursel_orgid,accid,cursel_replocid);
	}
      
  
}

function getXmlAttribute(attribe,attribename)
{
            var loc = attribe.indexOf( attribename+&amp;quot;=\&amp;quot;&amp;quot; );
            if(loc&amp;lt;0) return &amp;quot;&amp;quot;;
            var loc1 = attribe.indexOf( &amp;quot;\&amp;quot;&amp;quot; , loc+attribename.length+2);
            var ret = attribe.substring( loc+attribename.length+2,loc1 ) ;
            
            return ret;
}

function getReplocName(replocid) 
{
	_sql.querytods(&amp;quot;REPLOCNAM&amp;quot;,&amp;quot;REPLOCID=&amp;quot;+replocid);
	var replocnam = _this.XMLDS_GetString(0,&amp;quot;BMMC&amp;quot;);
	return replocnam;
}

function loadReport(yymm,orgid,accid,replocid)
{	
	_this.LoadZXGFile(ZXGFILE1,-1,1);
	_this.SetColVisible(1,4,-1);
	_this.SetColVisible(1,5,-1);
	
	_this.SetCellText(1,0,2,cursel_replocid);
	_this.SetCellText(1,0,3,getReplocName(replocid));
	_this.SetCellText(1,1,2,yymm);
	_this.SetToComboBox(&amp;quot;&amp;quot;,1,1,2,yymmList);
	_this.SetToComboBox(&amp;quot;&amp;quot;,1,2,2,printList);
	_this.SetCellText(1,2,2,&amp;quot;1&amp;quot;);
	_this.SetAttribe(&amp;quot;SHEET_1&amp;quot;,_this.ATTR_SHEET_SELECTFLAG,_this. SELECTFLAG_SINGLEROW );
	
	var xml = _sql.query(&amp;quot;MAIN&amp;quot;,&amp;quot;ORGID=&amp;quot;+orgid+&amp;quot;&amp;ACCID=&amp;quot;+accid+&amp;quot;&amp;REPLOCID=&amp;quot;+replocid+&amp;quot;&amp;YYMM=&amp;quot;+yymm);
	_this.SetMainCellRange(1,4,0,8,_this.GetColCount(1)-1);
	_this.SetXmlDS(1,4,0,8,_this.GetColCount(1)-1,xml);
	_this.SetToBoolBox(1,3,0);
	for (var r=4;r&amp;lt;_this.GetRowCount(1);r++) {
		_this.SetToBoolBox(1,r,0);
		if (_this.GetCellText(1,r,1) == &amp;quot;&amp;quot;) {
			_this.SetRowVisible(1,r,-1);
		}
		if (_this.GetCellText(1,r,1) == &amp;quot;未制表&amp;quot;) {
			_this.SetCellColor(1,r,1,255,0,0);
		}
		else if (_this.GetCellText(1,r,1) == &amp;quot;已制表&amp;quot;) {
			_this.SetCellColor(1,r,1,0,0,255);
		}
	}

	_this.AutoFixColWidth(1,400);
	_this.AutoFixScreenWidth();
	
}

//修改单元格内容
function _thisOnCellModify(sheet,row,col,oldvalue,newvalue)
{
	if (sheet == 1) {
		if (row == 1 &amp;&amp; col == 2) {
			var yymm = _this.GetCellText(1,1,2);
			loadReport(yymm,cursel_orgid,accid,cursel_replocid);
		}
		else if (row == 3 &amp;&amp; col == 0) {
			for (var r=4;r&amp;lt;_this.GetRowCount(1);r++) {
				_this.SetCellText(1,r,0,newvalue);
			}
		}
	}
}

//打印
function startPrint()
{
	//增加权限控制
	var author = invokeOSFunc(&amp;quot;PrintReport&amp;quot;,&amp;quot;&amp;quot;);
	if (author != 1) {
		alert(&amp;quot;对不起，你没有该操作权限！&amp;quot;);
		return;
	}
		
	var cnt = 0;
	var yymm = _this.GetCellText(1,1,2);
	var printzs = _this.GetCellText(1,2,2); //打印张数
	for (var r=_this.GetMainCellRangeRow1(1);r&amp;lt;=_this.GetMainCellRangeRow2(1);r++) {
		var sel = _this.GetCellText(1,r,0);
		var rpstat = _this.GetCellText(1,r,1);
		var rpid = _this.GetCellText(1,r,2);
		var rpname = _this.GetCellText(1,r,3);
		var rpguid = _this.GetCellText(1,r,4);
		var rpmwid = _this.GetCellText(1,r,5);
		
		if (sel == 1) {
			cnt ++;
			var url = &amp;quot;show.sp?grdid=&amp;quot;+rpmwid+&amp;quot;&amp;guid=&amp;quot;+rpguid+&amp;quot;&amp;repid=&amp;quot;+rpid+&amp;quot;&amp;yymm=&amp;quot;+yymm+&amp;quot;&amp;repnam=&amp;quot;+rpname+&amp;quot;&amp;thisorgid=&amp;quot;+cursel_orgid+&amp;quot;&amp;replocid=&amp;quot;+cursel_replocid+&amp;quot;&amp;callfunc=f_print_and_close&amp;quot;;
			if (rpguid != &amp;quot;&amp;quot;) {
				for (n=0;n&amp;lt;printzs;n++) {
					window.open(url);
				}
			}
		}
		
	}
	
	if (cnt == 0) {
		alert(&amp;quot;请先选择要打印的报表！&amp;quot;);
	}
}


//鼠标双击
function _thisOnMouseDClick(sheet,row,col)
{
	if (sheet == 1 &amp;&amp; row &amp;gt;= _this.GetMainCellRangeRow1(sheet) &amp;&amp; row &amp;lt;=_this.GetMainCellRangeRow2(sheet)) {
		var stat = _this.GetCellText(sheet,row,1);
		var repid = _this.GetCellText(sheet,row,2);
		var yymm = _this.GetCellText(sheet,1,2);
		var repnam = _this.GetCellText(sheet,row,3);		
		if (stat == &amp;quot;未制表&amp;quot;) {
			alert(&amp;quot;报表未制作，不能预览！&amp;quot;);
			return;
		}
		openReport(cursel_orgid,cursel_accid,cursel_replocid,repid,repnam,yymm);	
	}
}

//打开报表数据
function openReport(orgid,accid,replocid,repid,repnam,yymm)
{
	if (repid != &amp;quot;&amp;quot; &amp;&amp; yymm == &amp;quot;&amp;quot;) {
		if (yymm == &amp;quot;&amp;quot;) yymm = _this.GetCellText(1,1,2)+&amp;quot;-01&amp;quot;;
		//alert(repid+&amp;quot;报表的数据未生成，请先生成报表数据！&amp;quot;);
		if (confirm(repid+&amp;quot;报表 &amp;quot;+yymm+&amp;quot; 的数据未生成，是否预览报表数据？&amp;quot;) == true) {
			_sql.querytods(&amp;quot;REPINFO&amp;quot;,&amp;quot;REPID=&amp;quot;+repid);
			var mwid = _this.XMLDS_GetString(0,&amp;quot;MWID&amp;quot;);
			var url = &amp;quot;show.sp?grdid=&amp;quot;+mwid+&amp;quot;&amp;repid=&amp;quot;+repid+&amp;quot;&amp;yymm=&amp;quot;+yymm+&amp;quot;&amp;thisaccid=&amp;quot;+accid
			+&amp;quot;&amp;thisorgid=&amp;quot;+orgid+&amp;quot;&amp;accid=&amp;quot;+accid+&amp;quot;&amp;repnam=&amp;quot;+repnam+&amp;quot;&amp;replocid=&amp;quot;+replocid+&amp;quot;&amp;action=query&amp;quot;;//+&amp;quot;&amp;isSave=false&amp;quot;;
			window.open(url);
		}
		return;
	}
	if (yymm == &amp;quot;&amp;quot; || repid == &amp;quot;&amp;quot;) return;
	
	_sql.querytods(&amp;quot;REPINFO&amp;quot;,&amp;quot;REPID=&amp;quot;+repid);
	var mwid = _this.XMLDS_GetString(0,&amp;quot;MWID&amp;quot;);
	var guid = invokeOSFunc(&amp;quot;getRepGuid&amp;quot;,&amp;quot;orgid=&amp;quot;+orgid+&amp;quot;&amp;yymm=&amp;quot;+yymm+&amp;quot;&amp;mwid=&amp;quot;+mwid+&amp;quot;&amp;accid=&amp;quot;+accid+&amp;quot;&amp;replocid=&amp;quot;+cursel_replocid);
	guid = (guid == undefined ? &amp;quot;&amp;quot; : guid);
	var url = &amp;quot;show.sp?grdid=&amp;quot;+mwid+&amp;quot;&amp;guid=&amp;quot;+guid+&amp;quot;&amp;repid=&amp;quot;+repid+&amp;quot;&amp;yymm=&amp;quot;+yymm+&amp;quot;&amp;repnam=&amp;quot;+repnam+&amp;quot;&amp;thisorgid=&amp;quot;+orgid+&amp;quot;&amp;replocid=&amp;quot;+cursel_replocid+&amp;quot;&amp;action=query&amp;quot;;
	window.open(url);

}

</GRDJSDS_VALUE></ROW>
</ROWSET>
</grdjsds><grdosds>
<ROWSET>
<ROW num="0" ><GRDOSDS_VALUE >var pub = new JavaPackage(&amp;quot;com.xlsgrid.net.pub&amp;quot;);

//在Head区引用额外脚本
function addHeaderHtml(mwobj,request,sb,usrinfo)
//var sb = new java.lang.StringBuffer();var usrinfo = new web.EAUserinfo();
{
	sb.append(&amp;quot;&amp;lt;link rel=\&amp;quot;stylesheet\&amp;quot; href=\&amp;quot;xlsgrid/zTree/css/zTreeStyle/zTreeStyle.css\&amp;quot; type=\&amp;quot;text/css\&amp;quot;&amp;gt;\n&amp;quot;); 
	sb.append(&amp;quot;&amp;lt;script type=\&amp;quot;text/javascript\&amp;quot; src=\&amp;quot;xlsgrid/zTree/js/jquery-1.4.4.min.js\&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;\n&amp;quot;); 
	sb.append(&amp;quot;&amp;lt;script type=\&amp;quot;text/javascript\&amp;quot; src=\&amp;quot;xlsgrid/zTree/js/jquery.ztree.core.js\&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;\n&amp;quot;); 

	sb.append(&amp;quot;&amp;lt;table border=\&amp;quot;0\&amp;quot; width=\&amp;quot;100%\&amp;quot; cellspacing=\&amp;quot;0\&amp;quot; cellpadding=\&amp;quot;0\&amp;quot; height=\&amp;quot;100%\&amp;quot;&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td bgcolor=\&amp;quot;#EFEFEF\&amp;quot; align=center valign=middle&amp;gt;&amp;quot;);
	sb.append(&amp;quot;&amp;lt;table border=\&amp;quot;0\&amp;quot; width=\&amp;quot;100%\&amp;quot; height=\&amp;quot;100%\&amp;quot; cellspacing=\&amp;quot;0\&amp;quot; cellpadding=\&amp;quot;0\&amp;quot; &amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td  style=\&amp;quot;border: 1px solid #EEEEEE\&amp;quot;&amp;gt;	&amp;quot;);
	sb.append(&amp;quot;&amp;lt;table border=\&amp;quot;0\&amp;quot; width=\&amp;quot;100%\&amp;quot; height=\&amp;quot;100%\&amp;quot; cellspacing=\&amp;quot;0\&amp;quot; cellpadding=\&amp;quot;0\&amp;quot; &amp;gt;&amp;lt;tr&amp;gt;&amp;quot;);
	sb.append(&amp;quot;&amp;lt;td width=30% height=100% style=\&amp;quot;border:solid 1px gray\&amp;quot; valign=top;&amp;gt;&amp;quot;);
	sb.append(&amp;quot;&amp;lt;div style=\&amp;quot;overflow-y:scroll;height:100%;\&amp;quot;&amp;gt;&amp;lt;ul id=\&amp;quot;treeReploc\&amp;quot; class=\&amp;quot;ztree\&amp;quot;&amp;gt;&amp;lt;/ul&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/td&amp;gt;&amp;quot;);
	sb.append(&amp;quot;&amp;lt;td width=70% height=100% style=\&amp;quot;border:solid 1px gray\&amp;quot;  valign=top;&amp;gt;&amp;lt;div style=\&amp;quot;overflow-y:scroll;height:100%;\&amp;quot;&amp;gt;&amp;quot;);

}

//添加额外html
//afterBodyHtml事件后触发，已过时，建议用afterBodyHtml事件进行处理
function addBottomHtml(mwobj,request,sb,usrinfo)
//var mwobj=grd.EAMidWareBase();var request=javax.servlet.http.HttpServletRequest();var sb = new java.lang.StringBuffer();var usrinfo = new web.EAUserinfo();
{
	sb.append(&amp;quot;&amp;lt;/div&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;/table&amp;gt;&amp;quot;);	
	sb.append(&amp;quot;&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;/table&amp;gt;&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;/table&amp;gt;&amp;quot;);
}

//获取报表位置节点数据
function GetReplocTree()
{
	var pubFunc = new SBCW_PUBFUNC();     
	var json = pubFunc.getReplocTreeJson(thisorgid,thisaccid,0);
	return json;
}

//组织树
function GetReportTree()
{
	var xml = &amp;quot;&amp;quot;;
	var db = null;
	try {
		db = new pub.EADatabase();
		var sql = &amp;quot;select * from oa_reploc where (sjbmbh is null or sjbmbh=&amp;apos;&amp;apos;) &amp;quot;;
		if (thisorgid != &amp;quot;1&amp;quot;) {
			sql += &amp;quot; and org=&amp;apos;&amp;quot;+thisorgid+&amp;quot;&amp;apos;&amp;quot;;
		}
		sql += &amp;quot; order by bmbh, sjbmbh&amp;quot;;	
		
		var ds = db.QuerySQL(sql);
		for(var i=0;i&amp;lt;ds.getRowCount();i++) {
			var bmbh = ds.getStringAt(i,&amp;quot;BMBH&amp;quot;);
			var bmmc = ds.getStringAt(i,&amp;quot;BMMC&amp;quot;);
			var orgid = ds.getStringAt(i,&amp;quot;ORG&amp;quot;);
			var accid = ds.getStringAt(i,&amp;quot;ACC&amp;quot;);
			var zth = ds.getStringAt(i,&amp;quot;ZTH&amp;quot;);
			var typ = (zth == &amp;quot;&amp;quot; ? &amp;quot;ORG&amp;quot; : &amp;quot;ACC&amp;quot;);
			xml += &amp;quot;&amp;lt;&amp;quot;+bmbh +&amp;quot;.&amp;quot;+bmmc+&amp;quot; imageid=\&amp;quot;0\&amp;quot; orgid=\&amp;quot;&amp;quot;+orgid+&amp;quot;\&amp;quot; accid=\&amp;quot;&amp;quot;+accid+&amp;quot;\&amp;quot; replocid=\&amp;quot;&amp;quot;+bmbh+&amp;quot;\&amp;quot; typ=\&amp;quot;&amp;quot;+typ+&amp;quot;\&amp;quot;&amp;gt;&amp;quot;;	
			xml += getAccXml(db,bmbh);
			xml += &amp;quot;&amp;lt;/&amp;quot;+bmbh+&amp;quot;.&amp;quot;+bmmc+&amp;quot;&amp;gt;&amp;quot;;
  		}
  		
	        return xml;
	}
	catch (e) {
		if (db != null) db.Rollback();
		return e.toString();
	}
	finally {
		if (db != null) db.Close();	
	}       
}

function GetAccList()
{
	var xml = &amp;quot;&amp;quot;;
	var db = null;
	try {
		db = new pub.EADatabase();
		xml = getAccXml(db,thisorgid);  		
	        return xml;
	}
	catch (e) {
		if (db != null) db.Rollback();
		return e.toString();
	}
	finally {
		if (db != null) db.Close();	
	}       

}

function getAccXml(db,bmbh)
{
	var xml = &amp;quot;&amp;quot;;
	var imageid = 0;
	var sql = &amp;quot;select * from oa_reploc where sjbmbh=&amp;apos;&amp;quot;+bmbh+&amp;quot;&amp;apos; order by bmbh&amp;quot;;
	var ds = db.QuerySQL(sql);
	for(var i=0;i&amp;lt;ds.getRowCount();i++) {
		var bmbh = ds.getStringAt(i,&amp;quot;BMBH&amp;quot;);
		var bmmc = ds.getStringAt(i,&amp;quot;BMMC&amp;quot;);
		var orgid = ds.getStringAt(i,&amp;quot;ORG&amp;quot;);
		var accid = ds.getStringAt(i,&amp;quot;ACC&amp;quot;);
		var zth = ds.getStringAt(i,&amp;quot;ZTH&amp;quot;);
		var typ = (zth == &amp;quot;&amp;quot; ? &amp;quot;ORG&amp;quot; : &amp;quot;ACC&amp;quot;);
		imageid = (zth == &amp;quot;&amp;quot; ? &amp;quot;0&amp;quot; : &amp;quot;1&amp;quot;);
		xml += &amp;quot;&amp;lt;&amp;quot;+bmbh +&amp;quot;.&amp;quot;+bmmc+&amp;quot; imageid=\&amp;quot;&amp;quot;+imageid+&amp;quot;\&amp;quot; orgid=\&amp;quot;&amp;quot;+orgid+&amp;quot;\&amp;quot; accid=\&amp;quot;&amp;quot;+accid+&amp;quot;\&amp;quot; replocid=\&amp;quot;&amp;quot;+bmbh+&amp;quot;\&amp;quot; typ=\&amp;quot;&amp;quot;+typ+&amp;quot;\&amp;quot;&amp;gt;&amp;quot;;	
		xml += getAccXml(db,bmbh);
		xml += &amp;quot;&amp;lt;/&amp;quot;+bmbh+&amp;quot;.&amp;quot;+bmmc+&amp;quot;&amp;gt;&amp;quot;;		
	}
	return xml;
}


function getRepGuid()
{
	var sql = &amp;quot;&amp;quot;;
	var eagrdxmldb = new xmldb.EAGRDXmlDB(&amp;quot;SBCW&amp;quot;,mwid);
	var grdds = eagrdxmldb.getGrdDS();
	var grdcolds = eagrdxmldb.getGrdColDS();
	var bilhdrtable = grdds.getStringAt(0,&amp;quot;BILHDRTABLE&amp;quot;);
	var bildtltable = grdds.getStringAt(0,&amp;quot;BILDTLTABLE&amp;quot;);

	try {
		sql = &amp;quot;select * from %s where acc=&amp;apos;%s&amp;apos; and yymm=&amp;apos;%s&amp;apos;&amp;quot;.format([bilhdrtable,accid,yymm]);
		var ds = pub.EADbTool.QuerySQL(sql);
		if (ds.getRowCount() &amp;gt; 0)
			return ds.getStringAt(0,&amp;quot;GUID&amp;quot;);
		else 
			return &amp;quot;&amp;quot;;
	} catch ( e ) {
		return e.toString();
	}
	return &amp;quot;&amp;quot;;
}

//打印报表权限检查
function PrintReport()
{
	return &amp;quot;1&amp;quot;;
}


</GRDOSDS_VALUE></ROW>
</ROWSET>
</grdosds><grddscds>
<ROWSET>
<ROW num="0" ><ID >MAIN</ID><NAME ></NAME><DATDSC >select sel,decode(stat,&amp;apos;0&amp;apos;,&amp;apos;未制表&amp;apos;,&amp;apos;已制表&amp;apos;) stat,reportid,reportname,guid,grdid from (
select &amp;apos;&amp;apos; sel,reportid,reportname,a.sortid,nvl(b.stat,&amp;apos;0&amp;apos;) stat,b.guid,a.grdid
from fin_repmodel a, v_repmodel b,fin_reporg c
where a.reportid=b.repid(+)
  and b.yymm(+)=&amp;apos;[%YYMM]&amp;apos;
  and a.yszth=(select yszth from cw_ztb where acc=&amp;apos;[%ACCID]&amp;apos;)
  and b.acc(+)=&amp;apos;[%ACCID]&amp;apos; 
  and b.replocid(+)=&amp;apos;[%REPLOCID]&amp;apos;
  and a.reportid=c.repmodid
  and c.orgid=&amp;apos;[%ORGID]&amp;apos;
  and 100*nvl(c.endyear,&amp;apos;9999&amp;apos;)+1*nvl(c.endmm,&amp;apos;99&amp;apos;)&amp;gt;=1*(substr(&amp;apos;[%YYMM]&amp;apos;,0,4)||substr(&amp;apos;[%YYMM]&amp;apos;,6,2))
  and 100*a.startyear+a.startmonth&amp;lt;=1*to_char(sysdate,&amp;apos;YYYYMM&amp;apos;)
  and a.isused=&amp;apos;1&amp;apos;
)
order by sortid,reportid</DATDSC><C4 >MAIN</C4><C5 >MAIN</C5><C6 ></C6><C7 >MAIN</C7><C8 >MAIN</C8><C9 >MAIN</C9><C10 >MAIN</C10><C11 ></C11><C12 >MAIN</C12><C13 >MAIN</C13><C14 >MAIN</C14><C15 >MAIN</C15><C16 >MAIN</C16><C17 ></C17><C18 ></C18><C19 >MAIN</C19><C20 >MAIN</C20></ROW>
<ROW num="1" ><ID >REPINFO</ID><NAME ></NAME><DATDSC >select * from 
fin_repmodel where reportid=&amp;apos;[%REPID]&amp;apos;</DATDSC><C4 ></C4><C5 ></C5><C6 >REPINFO</C6><C7 ></C7><C8 ></C8><C9 ></C9><C10 ></C10><C11 ></C11><C12 >REPINFO</C12><C13 ></C13><C14 ></C14><C15 ></C15><C16 ></C16><C17 ></C17><C18 >REPINFO</C18><C19 ></C19><C20 ></C20></ROW>
<ROW num="2" ><ID >REPDATE</ID><NAME ></NAME><DATDSC >select &amp;apos;&amp;apos; sel,yymm,stat from v_repmodel
where acc=&amp;apos;[%ACCID]&amp;apos; and viewtyp=&amp;apos;[%REPID]&amp;apos; and yymm like &amp;apos;[%YYYY]%&amp;apos;
order by yymm desc</DATDSC><C4 ></C4><C5 ></C5><C6 ></C6><C7 ></C7><C8 ></C8><C9 ></C9><C10 ></C10><C11 ></C11><C12 ></C12><C13 >REPDATE</C13><C14 ></C14><C15 ></C15><C16 ></C16><C17 ></C17><C18 ></C18><C19 ></C19><C20 ></C20></ROW>
<ROW num="3" ><ID >REPLOC</ID><NAME ></NAME><DATDSC >select * from oa_reploc where org=&amp;apos;[%SYS_ORGID]&amp;apos; and acc=&amp;apos;[%SYS_ACCID]&amp;apos; and hzbz=&amp;apos;2&amp;apos;</DATDSC><C4 ></C4><C5 ></C5><C6 ></C6><C7 ></C7><C8 ></C8><C9 ></C9><C10 >REPLOC</C10><C11 >REPLOC</C11><C12 ></C12><C13 >REPLOC</C13><C14 ></C14><C15 ></C15><C16 ></C16><C17 >REPLOC</C17><C18 ></C18><C19 ></C19><C20 ></C20></ROW>
<ROW num="4" ><ID >REPLOCNAM</ID><NAME ></NAME><DATDSC >select BMMC from oa_reploc where bmbh=&amp;apos;[%REPLOCID]&amp;apos;
</DATDSC><C4 ></C4><C5 ></C5><C6 ></C6><C7 ></C7><C8 ></C8><C9 ></C9><C10 ></C10><C11 ></C11><C12 ></C12><C13 ></C13><C14 ></C14><C15 ></C15><C16 ></C16><C17 ></C17><C18 ></C18><C19 ></C19><C20 ></C20></ROW>
<ROW num="5" ><ID >REPLOC2</ID><NAME ></NAME><DATDSC >select * from oa_reploc 
where org=&amp;apos;[%SYS_ORGID]&amp;apos; and hzbz=&amp;apos;2&amp;apos; 
order by bmbh
</DATDSC><C4 ></C4><C5 ></C5><C6 ></C6><C7 ></C7><C8 ></C8><C9 ></C9><C10 ></C10><C11 ></C11><C12 ></C12><C13 ></C13><C14 ></C14><C15 ></C15><C16 ></C16><C17 ></C17><C18 ></C18><C19 ></C19><C20 ></C20></ROW>
<ROW num="6" ><ID >ZTQDYM</ID><NAME ></NAME><DATDSC >select substr(qdym,0,4)||&amp;apos;-&amp;apos;||substr(qdym,5,6) qdym
from cw_ztb where org=&amp;apos;[%SYS_ORGID]&amp;apos; and acc=&amp;apos;[%SYS_ACCID]&amp;apos;</DATDSC><C4 ></C4><C5 ></C5><C6 ></C6><C7 ></C7><C8 ></C8><C9 ></C9><C10 ></C10><C11 ></C11><C12 ></C12><C13 ></C13><C14 ></C14><C15 ></C15><C16 ></C16><C17 ></C17><C18 ></C18><C19 ></C19><C20 ></C20></ROW>
</ROWSET>
</grddscds><fldhdr>
<ROWSET>
<ROW num="0" ><BILID >1单据编号</BILID><STAT >0单据状态</STAT><SUBTYP >0子类型</SUBTYP><CORPID >0往来单位编号</CORPID><CORPNAM >0往来单位名称</CORPNAM><LOCID >0仓库|部门编号</LOCID><LOCNAM >0仓库|部门名称</LOCNAM><DAT >0单据日期</DAT><CRTUSR >1录入人</CRTUSR><CRTUSRNAM >0录入人姓名</CRTUSRNAM><CRTDAT >0录入日期</CRTDAT><CHKUSR >1审核人</CHKUSR><CHKUSRNAM >0审核人姓名</CHKUSRNAM><CHKDAT >0审核日期</CHKDAT><SUMQTY >0合计金额</SUMQTY><SUMMNY >0合计金额</SUMMNY><REFID1 >0扩展字段</REFID1><REFNAM1 >0扩展字段</REFNAM1><REFID2 >0扩展字段</REFID2><REFNAM2 >0扩展字段</REFNAM2><REFID3 >0扩展字段</REFID3><REFNAM3 >0扩展字段</REFNAM3><REFID4 >0扩展字段</REFID4><REFNAM4 >0扩展字段</REFNAM4><REFID5 >0扩展字段</REFID5><REFNAM5 >0扩展字段</REFNAM5><REFID6 >0扩展字段</REFID6><REFNAM6 >0扩展字段</REFNAM6><NOTE >0备注</NOTE></ROW>
</ROWSET>
</fldhdr><flddtl>
<ROWSET>
<ROW num="0" ><SEQID >1明细序号</SEQID><ITMID >1品种编号</ITMID><ITMNAM >0品种名称</ITMNAM><ITEMPC >0品种批次号</ITEMPC><ITMSPC >0规格</ITMSPC><UNIT >0计量单位</UNIT><SMLUNT >0小计量单位</SMLUNT><UNTNUM >0大单位转小单位因子</UNTNUM><PRICE >0价格</PRICE><QTY >0数量</QTY><TAXTYP >0税率类型</TAXTYP><NOTAXMNY >0不含税税额</NOTAXMNY><TAXMNY >0税额</TAXMNY><MNY >0下单金额</MNY><REFID1 >0扩展字段</REFID1><REFNAM1 >0扩展字段</REFNAM1><REFID2 >0扩展字段</REFID2><REFNAM2 >0扩展字段</REFNAM2><REFID3 >0扩展字段</REFID3><REFNAM3 >0扩展字段</REFNAM3><REFID4 >0扩展字段</REFID4><REFNAM4 >0扩展字段</REFNAM4><REFID5 >0扩展字段</REFID5><REFNAM5 >0扩展字段</REFNAM5></ROW>
</ROWSET>
</flddtl></mdroot>